import { openBlock as v, createElementBlock as P, createElementVNode as ne, reactive as pt, computed as F, unref as o, ref as W, watch as kt, onMounted as Le, nextTick as bt, toRef as Ht, defineComponent as Ee, renderSlot as G, createCommentVNode as w, normalizeClass as he, withKeys as oe, createBlock as ce, withModifiers as je, normalizeStyle as it, Fragment as de, createTextVNode as Fe, toDisplayString as Ae, renderList as ke, createVNode as xe, Transition as ct, withCtx as ue, onBeforeUpdate as _n, onUnmounted as xt, withDirectives as Mt, vShow as At, mergeProps as Me, createSlots as Ne, normalizeProps as Ye, isRef as et, resolveDynamicComponent as St, useSlots as Xt, guardReactiveProps as tt, getCurrentScope as Mn, onScopeDispose as An, Teleport as Sn } from "vue";
import { isBefore as Zt, isEqual as cn, isAfter as qt, setHours as fn, setMinutes as mn, setSeconds as vn, setMilliseconds as Jt, parse as Gt, isValid as Pt, isDate as Pn, format as yt, getMonth as ve, getDay as Cn, getYear as ye, getHours as Ke, getMinutes as ze, getSeconds as dt, parseISO as Tn, startOfWeek as tn, endOfWeek as Rn, setMonth as Ct, setYear as lt, addDays as ut, set as Re, add as yn, addMonths as nt, subMonths as ht, getISOWeek as Bn, differenceInCalendarDays as Nn, eachDayOfInterval as nn, addYears as On, subYears as In, sub as Vn } from "date-fns";
import Yn from "date-fns-tz";
const rt = (e, a) => {
  const l = e.__vccOpts || e;
  for (const [t, h] of a)
    l[t] = h;
  return l;
}, Ln = {}, En = {
  version: "1.1",
  xmlns: "http://www.w3.org/2000/svg",
  width: "32",
  height: "32",
  viewBox: "0 0 32 32",
  class: "dp__icon"
}, Fn = /* @__PURE__ */ ne("path", { d: "M29.333 8c0-2.208-1.792-4-4-4h-18.667c-2.208 0-4 1.792-4 4v18.667c0 2.208 1.792 4 4 4h18.667c2.208 0 4-1.792 4-4v-18.667zM26.667 8v18.667c0 0.736-0.597 1.333-1.333 1.333 0 0-18.667 0-18.667 0-0.736 0-1.333-0.597-1.333-1.333 0 0 0-18.667 0-18.667 0-0.736 0.597-1.333 1.333-1.333 0 0 18.667 0 18.667 0 0.736 0 1.333 0.597 1.333 1.333z" }, null, -1), Wn = /* @__PURE__ */ ne("path", { d: "M20 2.667v5.333c0 0.736 0.597 1.333 1.333 1.333s1.333-0.597 1.333-1.333v-5.333c0-0.736-0.597-1.333-1.333-1.333s-1.333 0.597-1.333 1.333z" }, null, -1), Un = /* @__PURE__ */ ne("path", { d: "M9.333 2.667v5.333c0 0.736 0.597 1.333 1.333 1.333s1.333-0.597 1.333-1.333v-5.333c0-0.736-0.597-1.333-1.333-1.333s-1.333 0.597-1.333 1.333z" }, null, -1), Kn = /* @__PURE__ */ ne("path", { d: "M4 14.667h24c0.736 0 1.333-0.597 1.333-1.333s-0.597-1.333-1.333-1.333h-24c-0.736 0-1.333 0.597-1.333 1.333s0.597 1.333 1.333 1.333z" }, null, -1), zn = [
  Fn,
  Wn,
  Un,
  Kn
];
function jn(e, a) {
  return v(), P("svg", En, zn);
}
const Bt = /* @__PURE__ */ rt(Ln, [["render", jn]]), Hn = {}, Gn = {
  version: "1.1",
  xmlns: "http://www.w3.org/2000/svg",
  width: "32",
  height: "32",
  viewBox: "0 0 32 32",
  class: "dp__icon"
}, xn = /* @__PURE__ */ ne("path", { d: "M23.057 7.057l-16 16c-0.52 0.52-0.52 1.365 0 1.885s1.365 0.52 1.885 0l16-16c0.52-0.52 0.52-1.365 0-1.885s-1.365-0.52-1.885 0z" }, null, -1), Xn = /* @__PURE__ */ ne("path", { d: "M7.057 8.943l16 16c0.52 0.52 1.365 0.52 1.885 0s0.52-1.365 0-1.885l-16-16c-0.52-0.52-1.365-0.52-1.885 0s-0.52 1.365 0 1.885z" }, null, -1), Zn = [
  xn,
  Xn
];
function qn(e, a) {
  return v(), P("svg", Gn, Zn);
}
const Jn = /* @__PURE__ */ rt(Hn, [["render", qn]]), Qn = {}, ea = {
  version: "1.1",
  xmlns: "http://www.w3.org/2000/svg",
  width: "32",
  height: "32",
  viewBox: "0 0 32 32",
  class: "dp__icon"
}, ta = /* @__PURE__ */ ne("path", { d: "M20.943 23.057l-7.057-7.057c0 0 7.057-7.057 7.057-7.057 0.52-0.52 0.52-1.365 0-1.885s-1.365-0.52-1.885 0l-8 8c-0.521 0.521-0.521 1.365 0 1.885l8 8c0.52 0.52 1.365 0.52 1.885 0s0.52-1.365 0-1.885z" }, null, -1), na = [
  ta
];
function aa(e, a) {
  return v(), P("svg", ea, na);
}
const an = /* @__PURE__ */ rt(Qn, [["render", aa]]), la = {}, ra = {
  version: "1.1",
  xmlns: "http://www.w3.org/2000/svg",
  width: "32",
  height: "32",
  viewBox: "0 0 32 32",
  class: "dp__icon"
}, oa = /* @__PURE__ */ ne("path", { d: "M12.943 24.943l8-8c0.521-0.521 0.521-1.365 0-1.885l-8-8c-0.52-0.52-1.365-0.52-1.885 0s-0.52 1.365 0 1.885l7.057 7.057c0 0-7.057 7.057-7.057 7.057-0.52 0.52-0.52 1.365 0 1.885s1.365 0.52 1.885 0z" }, null, -1), sa = [
  oa
];
function ia(e, a) {
  return v(), P("svg", ra, sa);
}
const ln = /* @__PURE__ */ rt(la, [["render", ia]]), ua = {}, da = {
  version: "1.1",
  xmlns: "http://www.w3.org/2000/svg",
  width: "32",
  height: "32",
  viewBox: "0 0 32 32",
  class: "dp__icon"
}, ca = /* @__PURE__ */ ne("path", { d: "M16 1.333c-8.095 0-14.667 6.572-14.667 14.667s6.572 14.667 14.667 14.667c8.095 0 14.667-6.572 14.667-14.667s-6.572-14.667-14.667-14.667zM16 4c6.623 0 12 5.377 12 12s-5.377 12-12 12c-6.623 0-12-5.377-12-12s5.377-12 12-12z" }, null, -1), fa = /* @__PURE__ */ ne("path", { d: "M14.667 8v8c0 0.505 0.285 0.967 0.737 1.193l5.333 2.667c0.658 0.329 1.46 0.062 1.789-0.596s0.062-1.46-0.596-1.789l-4.596-2.298c0 0 0-7.176 0-7.176 0-0.736-0.597-1.333-1.333-1.333s-1.333 0.597-1.333 1.333z" }, null, -1), ma = [
  ca,
  fa
];
function va(e, a) {
  return v(), P("svg", da, ma);
}
const hn = /* @__PURE__ */ rt(ua, [["render", va]]), ya = {}, ha = {
  version: "1.1",
  xmlns: "http://www.w3.org/2000/svg",
  width: "32",
  height: "32",
  viewBox: "0 0 32 32",
  class: "dp__icon"
}, ga = /* @__PURE__ */ ne("path", { d: "M24.943 19.057l-8-8c-0.521-0.521-1.365-0.521-1.885 0l-8 8c-0.52 0.52-0.52 1.365 0 1.885s1.365 0.52 1.885 0l7.057-7.057c0 0 7.057 7.057 7.057 7.057 0.52 0.52 1.365 0.52 1.885 0s0.52-1.365 0-1.885z" }, null, -1), pa = [
  ga
];
function ka(e, a) {
  return v(), P("svg", ha, pa);
}
const gn = /* @__PURE__ */ rt(ya, [["render", ka]]), ba = {}, wa = {
  version: "1.1",
  xmlns: "http://www.w3.org/2000/svg",
  width: "32",
  height: "32",
  viewBox: "0 0 32 32",
  class: "dp__icon"
}, $a = /* @__PURE__ */ ne("path", { d: "M7.057 12.943l8 8c0.521 0.521 1.365 0.521 1.885 0l8-8c0.52-0.52 0.52-1.365 0-1.885s-1.365-0.52-1.885 0l-7.057 7.057c0 0-7.057-7.057-7.057-7.057-0.52-0.52-1.365-0.52-1.885 0s-0.52 1.365 0 1.885z" }, null, -1), Da = [
  $a
];
function _a(e, a) {
  return v(), P("svg", wa, Da);
}
const pn = /* @__PURE__ */ rt(ba, [["render", _a]]), rn = (e, a) => {
  const l = Gt(e, a.slice(0, e.length), new Date());
  return Pt(l) && Pn(l) ? l : null;
}, Ma = (e, a) => {
  if (typeof a == "string")
    return rn(e, a);
  if (Array.isArray(a)) {
    let l = null;
    for (const t of a)
      if (l = rn(e, t), l)
        break;
    return l;
  }
  return typeof a == "function" ? a(e) : null;
}, p = (e) => e ? new Date(e) : new Date(), Aa = (e, a) => {
  if (a) {
    const t = (e.getMonth() + 1).toString().padStart(2, "0"), h = e.getDate().toString().padStart(2, "0"), b = e.getHours().toString().padStart(2, "0"), T = e.getMinutes().toString().padStart(2, "0");
    return `${e.getFullYear()}-${t}-${h}T${b}:${T}:00.000Z`;
  }
  const l = Date.UTC(
    e.getUTCFullYear(),
    e.getUTCMonth(),
    e.getUTCDate(),
    e.getUTCHours(),
    e.getUTCMinutes(),
    e.getUTCSeconds()
  );
  return new Date(l).toISOString();
}, We = (e) => {
  let a = p(JSON.parse(JSON.stringify(e)));
  return a = fn(a, 0), a = mn(a, 0), a = vn(a, 0), a = Jt(a, 0), a;
}, Ie = (e, a, l, t) => {
  let h = e ? p(e) : p();
  return (a || a === 0) && (h = fn(h, +a)), (l || l === 0) && (h = mn(h, +l)), (t || t === 0) && (h = vn(h, +t)), Jt(h, 0);
}, Ce = (e, a) => !e || !a ? !1 : Zt(We(e), We(a)), me = (e, a) => !e || !a ? !1 : cn(We(e), We(a)), Be = (e, a) => !e || !a ? !1 : qt(We(e), We(a)), kn = (e, a, l) => e && e[0] && e[1] ? Be(l, e[0]) && Ce(l, e[1]) : e && e[0] && a ? Be(l, e[0]) && Ce(l, a) || Ce(l, e[0]) && Be(l, a) : !1, vt = pt({
  menuFocused: !1,
  shiftKeyInMenu: !1
}), bn = () => {
  const e = (t) => {
    vt.menuFocused = t;
  }, a = (t) => {
    vt.shiftKeyInMenu !== t && (vt.shiftKeyInMenu = t);
  };
  return {
    control: F(() => ({ shiftKeyInMenu: vt.shiftKeyInMenu, menuFocused: vt.menuFocused })),
    setMenuFocused: e,
    setShiftKey: a
  };
}, Sa = (e, a = 3) => {
  const l = [];
  for (let t = 0; t < e.length; t += a)
    l.push([e[t], e[t + 1], e[t + 2]]);
  return l;
}, Pa = (e, a) => {
  const l = [1, 2, 3, 4, 5, 6, 7].map((b) => new Intl.DateTimeFormat(e, { weekday: "short", timeZone: "UTC" }).format(new Date(`2017-01-0${b}T00:00:00+00:00`)).slice(0, 2)), t = l.slice(0, a), h = l.slice(a + 1, l.length);
  return [l[a]].concat(...h).concat(...t);
}, Ca = (e) => {
  const a = [];
  for (let l = +e[0]; l <= +e[1]; l++)
    a.push({ value: +l, text: `${l}` });
  return a;
}, Ta = (e, a) => {
  const l = new Intl.DateTimeFormat(e, { month: a, timeZone: "UTC" });
  return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12].map((h) => {
    const b = h < 10 ? `0${h}` : h;
    return new Date(`2017-${b}-01T00:00:00+00:00`);
  }).map((h, b) => ({
    text: l.format(h),
    value: b
  }));
}, Ra = (e) => [12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11][e], Se = (e) => {
  var l;
  const a = o(e);
  return (l = a == null ? void 0 : a.$el) != null ? l : a;
}, Ba = (e) => Object.assign({ type: "dot" }, e), wn = (e) => Array.isArray(e) ? !!e[0] && !!e[1] : !1, Rt = {
  prop: (e) => `"${e}" prop must be enabled!`,
  dateArr: (e) => `You need to use array as "model-value" binding in order to support "${e}"`
}, we = (e) => e, on = (e) => Object.assign(
  {
    menuAppear: "dp-menu-appear",
    open: "dp-slide-down",
    close: "dp-slide-up",
    next: "calendar-next",
    previous: "calendar-prev",
    vNext: "dp-slide-up",
    vPrevious: "dp-slide-down"
  },
  e
), Na = (e) => Object.assign(
  {
    toggleOverlay: "Toggle overlay",
    menu: "Datepicker menu",
    input: "Datepicker input",
    calendarWrap: "Calendar wrapper",
    calendarDays: "Calendar days",
    openTimePicker: "Open time picker",
    closeTimePicker: "Close time Picker",
    incrementValue: (a) => `Increment ${a}`,
    decrementValue: (a) => `Decrement ${a}`,
    openTpOverlay: (a) => `Open ${a} overlay`,
    amPmButton: "Switch AM/PM mode",
    openYearsOverlay: "Open years overlay",
    openMonthsOverlay: "Open months overlay",
    nextMonth: "Next month",
    prevMonth: "Previous month",
    day: () => ""
  },
  e
), Oa = (e) => e === null ? 0 : typeof e == "boolean" ? e ? 2 : 0 : +e >= 2 ? +e : 2, Ia = (e, a, l) => e || (typeof l == "string" ? l : a), Va = (e) => typeof e == "boolean" ? e ? on({}) : !1 : on(e), Ya = () => ({
  enterSubmit: !0,
  tabSubmit: !0,
  openMenu: !0,
  rangeSeparator: " - "
}), La = (e) => Object.assign({ months: [], years: [], times: { hours: [], minutes: [], seconds: [] } }, e), { utcToZonedTime: Ea, zonedTimeToUtc: Fa } = Yn, Oe = (e) => {
  const a = () => {
    if (e.partialRange)
      return null;
    throw new Error(Rt.prop("partial-range"));
  }, l = F(() => ({
    ariaLabels: Na(e.ariaLabels),
    textInputOptions: Object.assign(Ya(), e.textInputOptions),
    multiCalendars: Oa(e.multiCalendars),
    previewFormat: Ia(e.previewFormat, e.format, b()),
    filters: La(e.filters),
    transitions: Va(e.transitions),
    startTime: D()
  })), t = (n) => {
    if (e.range)
      return n();
    throw new Error(Rt.prop("range"));
  }, h = () => {
    const n = e.enableSeconds ? ":ss" : "";
    return e.is24 ? `HH:mm${n}` : `hh:mm${n} aa`;
  }, b = () => e.format ? e.format : e.monthPicker ? "MM/yyyy" : e.timePicker ? h() : e.weekPicker ? "MM/dd/yyyy" : e.yearPicker ? "yyyy" : e.enableTimePicker ? `MM/dd/yyyy, ${h()}` : "MM/dd/yyyy", T = (n, u) => {
    if (typeof e.format == "function")
      return e.format(n);
    const g = u || b(), V = e.formatLocale ? { locale: e.formatLocale } : void 0;
    return Array.isArray(n) ? `${yt(n[0], g, V)} ${e.modelAuto && !n[1] ? "" : l.value.textInputOptions.rangeSeparator || "-"} ${n[1] ? yt(n[1], g, V) : ""}` : yt(n, g, V);
  }, A = (n) => e.timezone ? Ea(n, e.timezone) : n, L = (n) => e.timezone ? Fa(n, e.timezone) : n, E = F(() => (n) => {
    var u;
    return (u = e.hideNavigation) == null ? void 0 : u.includes(n);
  }), Y = (n) => {
    const u = e.maxDate ? Be(A(n), A(p(e.maxDate))) : !1, g = e.minDate ? Ce(A(n), A(p(e.minDate))) : !1, V = C(n, e.disabledDates), S = l.value.filters.months.map((Pe) => +Pe).includes(ve(n)), c = e.disabledWeekDays.length ? e.disabledWeekDays.some((Pe) => +Pe === Cn(n)) : !1, q = e.allowedDates.length ? !e.allowedDates.some((Pe) => me(A(p(Pe)), A(n))) : !1, se = ye(n), ge = se < +e.yearRange[0] || se > +e.yearRange[1];
    return !(u || g || V || S || ge || c || q);
  }, s = (n) => {
    const u = {
      hours: Ke(p()),
      minutes: ze(p()),
      seconds: dt(p())
    };
    return Object.assign(u, n);
  }, D = () => e.range ? e.startTime && Array.isArray(e.startTime) ? [s(e.startTime[0]), s(e.startTime[1])] : null : e.startTime && !Array.isArray(e.startTime) ? s(e.startTime) : null, N = (n) => !Y(n), I = (n) => Array.isArray(n) ? Pt(n[0]) && (n[1] ? Pt(n[1]) : !0) : n ? Pt(n) : !1, X = (n) => n instanceof Date ? n : Tn(n), ae = (n) => {
    const u = tn(A(n), { weekStartsOn: +e.weekStart }), g = Rn(A(n), { weekStartsOn: +e.weekStart });
    return [u, g];
  }, C = (n, u) => Array.isArray(u) ? u.some((g) => me(A(p(g)), A(n))) : u(n), $ = (n, u, g) => {
    let V = n ? p(n) : p();
    return (u || u === 0) && (V = Ct(V, u)), g && (V = lt(V, g)), V;
  }, x = (n) => Re(p(), { hours: Ke(n), minutes: ze(n), seconds: dt(n) }), J = (n) => Re(p(), {
    hours: +n.hours || 0,
    minutes: +n.minutes || 0,
    seconds: +n.seconds || 0
  }), Q = (n, u, g, V) => {
    if (!n)
      return !0;
    if (V) {
      const m = g === "max" ? Zt(n, u) : qt(n, u), S = { seconds: 0, milliseconds: 0 };
      return m || cn(Re(n, S), Re(u, S));
    }
    return g === "max" ? n.getTime() <= u.getTime() : n.getTime() >= u.getTime();
  }, R = () => !e.enableTimePicker || e.monthPicker || e.yearPicker || e.ignoreTimeValidation, f = (n) => Array.isArray(n) ? [n[0] ? x(n[0]) : null, n[1] ? x(n[1]) : null] : x(n), O = (n) => {
    const u = e.maxTime ? J(e.maxTime) : p(e.maxDate);
    return Array.isArray(n) ? Q(n[0], u, "max", !!e.maxDate) && Q(n[1], u, "max", !!e.maxDate) : Q(n, u, "max", !!e.maxDate);
  }, j = (n, u) => {
    const g = e.minTime ? J(e.minTime) : p(e.minDate);
    return Array.isArray(n) ? Q(n[0], g, "min", !!e.minDate) && Q(n[1], g, "min", !!e.minDate) && u : Q(n, g, "min", !!e.minDate) && u;
  }, le = (n) => {
    let u = !0;
    if (!n || R())
      return !0;
    const g = !e.minDate && !e.maxDate ? f(n) : n;
    return (e.maxTime || e.maxDate) && (u = O(we(g))), (e.minTime || e.minDate) && (u = j(we(g), u)), u;
  }, B = (n, u) => {
    const g = p(JSON.parse(JSON.stringify(n))), V = [];
    for (let m = 0; m < 7; m++) {
      const S = ut(g, m), c = ve(S) !== u;
      V.push({
        text: e.hideOffsetDates && c ? "" : S.getDate(),
        value: S,
        current: !c,
        classData: {}
      });
    }
    return V;
  }, U = (n, u) => {
    const g = [], V = p(A(new Date(u, n))), m = p(A(new Date(u, n + 1, 0))), S = tn(V, { weekStartsOn: e.weekStart }), c = (q) => {
      const se = B(q, n);
      if (g.push({ days: se }), !g[g.length - 1].days.some(
        (ge) => me(We(ge.value), We(m))
      )) {
        const ge = ut(q, 7);
        c(ge);
      }
    };
    if (c(S), e.sixWeeks && g.length < 6) {
      const q = 6 - g.length;
      for (let se = 1; se <= q; se++) {
        const ge = g[g.length - 1], Pe = ge.days[ge.days.length - 1], ee = B(ut(Pe.value, 1), ve(V));
        g.push({ days: ee });
      }
    }
    return g;
  }, y = (n, u, g) => [Re(p(n), { date: 1 }), Re(p(), { month: u, year: g, date: 1 })], i = (n, u) => Ce(...y(e.minDate, n, u)) || me(...y(e.minDate, n, u)), M = (n, u) => Be(...y(e.maxDate, n, u)) || me(...y(e.maxDate, n, u)), _ = (n, u, g) => {
    let V = !1;
    return e.maxDate && g && M(n, u) && (V = !0), e.minDate && !g && i(n, u) && (V = !0), V;
  };
  return {
    checkPartialRangeValue: a,
    checkRangeEnabled: t,
    getZonedDate: A,
    getZonedToUtc: L,
    formatDate: T,
    getDefaultPattern: b,
    validateDate: Y,
    getDefaultStartTime: D,
    isDisabled: N,
    isValidDate: I,
    sanitizeDate: X,
    getWeekFromDate: ae,
    matchDate: C,
    setDateMonthOrYear: $,
    isValidTime: le,
    getCalendarDays: U,
    validateMonthYearInRange: (n, u, g, V) => {
      let m = !1;
      return V ? e.minDate && e.maxDate ? m = _(n, u, g) : (e.minDate && i(n, u) || e.maxDate && M(n, u)) && (m = !0) : m = !0, m;
    },
    validateMaxDate: M,
    validateMinDate: i,
    defaults: l,
    hideNavigationButtons: E
  };
}, fe = pt({
  monthYear: [],
  calendar: [],
  time: [],
  actionRow: [],
  selectionGrid: [],
  timePicker: {
    0: [],
    1: []
  },
  monthPicker: []
}), Ft = W(null), _t = W(!1), Wt = W(!1), Ut = W(!1), Kt = W(!1), Te = W(0), _e = W(0), Xe = () => {
  const e = F(() => _t.value ? [...fe.selectionGrid, fe.actionRow].filter((C) => C.length) : Wt.value ? [
    ...fe.timePicker[0],
    ...fe.timePicker[1],
    Kt.value ? [] : [Ft.value],
    fe.actionRow
  ].filter((C) => C.length) : Ut.value ? [...fe.monthPicker, fe.actionRow] : [fe.monthYear, ...fe.calendar, fe.time, fe.actionRow].filter((C) => C.length)), a = (C) => {
    Te.value = C ? Te.value + 1 : Te.value - 1;
    let $ = null;
    e.value[_e.value] && ($ = e.value[_e.value][Te.value]), $ || (Te.value = C ? Te.value - 1 : Te.value + 1);
  }, l = (C) => {
    if (_e.value === 0 && !C || _e.value === e.value.length && C)
      return;
    _e.value = C ? _e.value + 1 : _e.value - 1, e.value[_e.value] ? e.value[_e.value] && !e.value[_e.value][Te.value] && Te.value !== 0 && (Te.value = e.value[_e.value].length - 1) : _e.value = C ? _e.value - 1 : _e.value + 1;
  }, t = (C) => {
    let $ = null;
    e.value[_e.value] && ($ = e.value[_e.value][Te.value]), $ ? $.focus({ preventScroll: !_t.value }) : Te.value = C ? Te.value - 1 : Te.value + 1;
  }, h = () => {
    a(!0), t(!0);
  }, b = () => {
    a(!1), t(!1);
  }, T = () => {
    l(!1), t(!0);
  }, A = () => {
    l(!0), t(!0);
  }, L = (C, $) => {
    fe[$] = C;
  }, E = (C, $) => {
    fe[$] = C;
  }, Y = () => {
    Te.value = 0, _e.value = 0;
  };
  return {
    buildMatrix: L,
    buildMultiLevelMatrix: E,
    setTimePickerBackRef: (C) => {
      Ft.value = C;
    },
    setSelectionGrid: (C) => {
      _t.value = C, Y(), C || (fe.selectionGrid = []);
    },
    setTimePicker: (C, $ = !1) => {
      Wt.value = C, Kt.value = $, Y(), C || (fe.timePicker[0] = [], fe.timePicker[1] = []);
    },
    setTimePickerElements: (C, $ = 0) => {
      fe.timePicker[$] = C;
    },
    arrowRight: h,
    arrowLeft: b,
    arrowUp: T,
    arrowDown: A,
    clearArrowNav: () => {
      fe.monthYear = [], fe.calendar = [], fe.time = [], fe.actionRow = [], fe.selectionGrid = [], fe.timePicker[0] = [], fe.timePicker[1] = [], _t.value = !1, Wt.value = !1, Kt.value = !1, Ut.value = !1, Y(), Ft.value = null;
    },
    setMonthPicker: (C) => {
      Ut.value = C, Y();
    },
    refSets: fe
  };
}, sn = (e) => Array.isArray(e), Qe = (e) => Array.isArray(e), un = (e) => Array.isArray(e) && e.length === 2, Wa = (e, a, l, t) => {
  const {
    getDefaultStartTime: h,
    isDisabled: b,
    sanitizeDate: T,
    getWeekFromDate: A,
    setDateMonthOrYear: L,
    validateMonthYearInRange: E,
    defaults: Y
  } = Oe(e), s = F({
    get: () => e.internalModelValue,
    set: (r) => {
      !e.readonly && !e.disabled && a("update:internal-model-value", r);
    }
  }), D = W([]);
  kt(s, () => x());
  const N = W([{ month: ve(p()), year: ye(p()) }]), I = pt({
    hours: e.range ? [Ke(p()), Ke(p())] : Ke(p()),
    minutes: e.range ? [ze(p()), ze(p())] : ze(p()),
    seconds: e.range ? [0, 0] : 0
  }), X = F(
    () => (r) => N.value[r] ? N.value[r].month : 0
  ), ae = F(
    () => (r) => N.value[r] ? N.value[r].year : 0
  ), C = (r, k, z) => {
    N.value[r].month = k === null ? N.value[r].month : k, N.value[r].year = z === null ? N.value[r].year : z;
  }, $ = (r, k) => {
    I[r] = k;
  };
  Le(() => {
    s.value || (e.startDate && (C(0, ve(p(e.startDate)), ye(p(e.startDate))), Y.value.multiCalendars && Ue(0)), Y.value.startTime && y()), x(!0);
  });
  const x = (r = !1) => {
    if (s.value)
      return Array.isArray(s.value) ? O(r) : Q(s.value);
    if (e.timePicker)
      return j();
    if (e.monthPicker && !e.range)
      return le();
    if (e.yearPicker && !e.range)
      return B();
    if (Y.value.multiCalendars)
      return J(p(), r);
  }, J = (r, k = !1) => {
    if ((!Y.value.multiCalendars || !e.multiStatic || k) && C(0, ve(r), ye(r)), Y.value.multiCalendars)
      for (let z = 1; z <= Y.value.multiCalendars; z++) {
        const re = Re(p(), { month: X.value(z - 1), year: ae.value(z - 1) }), d = yn(re, { months: 1 });
        N.value[z] = { month: ve(d), year: ye(d) };
      }
  }, Q = (r) => {
    J(r), $("hours", Ke(r)), $("minutes", ze(r)), $("seconds", dt(r));
  }, R = (r, k) => {
    J(r[0], k);
    const z = (re) => [
      re(r[0]),
      r[1] ? re(r[1]) : re(p())
    ];
    $("hours", z(Ke)), $("minutes", z(ze)), $("seconds", z(dt));
  }, f = (r, k) => {
    if (e.range && !e.multiDates)
      return R(r, k);
    if (e.multiDates) {
      const z = r[r.length - 1];
      return Q(z);
    }
  }, O = (r) => {
    const k = s.value;
    f(k, r), Y.value.multiCalendars && e.multiCalendarsSolo && M();
  }, j = () => {
    if (y(), !e.range)
      s.value = Ie(p(), I.hours, I.minutes, U());
    else {
      const r = I.hours, k = I.minutes;
      s.value = [
        Ie(p(), r[0], k[0], U()),
        Ie(p(), r[1], k[1], U(!1))
      ];
    }
  }, le = () => {
    s.value = L(p(), X.value(0), ae.value(0));
  }, B = () => {
    s.value = p();
  }, U = (r = !0) => e.enableSeconds ? Array.isArray(I.seconds) ? r ? I.seconds[0] : I.seconds[1] : I.seconds : 0, y = () => {
    const r = h();
    if (r) {
      const k = Array.isArray(r), z = k ? [+r[0].hours, +r[1].hours] : +r.hours, re = k ? [+r[0].minutes, +r[1].minutes] : +r.minutes, d = k ? [+r[0].seconds, +r[1].seconds] : +r.seconds;
      $("hours", z), $("minutes", re), e.enableSeconds && $("seconds", d);
    }
  }, i = () => Array.isArray(s.value) && s.value.length ? s.value[s.value.length - 1] : null, M = () => {
    if (Array.isArray(s.value) && s.value.length === 2) {
      const r = p(
        p(s.value[1] ? s.value[1] : nt(s.value[0], 1))
      ), [k, z] = [ve(s.value[0]), ye(s.value[0])], [re, d] = [ve(s.value[1]), ye(s.value[1])];
      (k !== re || k === re && z !== d) && e.multiCalendarsSolo && C(1, ve(r), ye(r));
    }
  }, _ = (r) => {
    const k = nt(r, 1);
    return { month: ve(k), year: ye(k) };
  }, K = (r) => {
    const k = ve(p(r)), z = ye(p(r));
    if (C(0, k, z), Y.value.multiCalendars > 0)
      for (let re = 1; re < Y.value.multiCalendars; re++) {
        const d = _(
          Re(p(r), { year: X.value(re - 1), month: ae.value(re - 1) })
        );
        C(re, d.month, d.year);
      }
  }, n = (r) => {
    if (s.value && Array.isArray(s.value))
      if (s.value.some((k) => me(r, k))) {
        const k = s.value.filter((z) => !me(z, r));
        s.value = k.length ? k : null;
      } else
        (e.multiDatesLimit && +e.multiDatesLimit > s.value.length || !e.multiDatesLimit) && s.value.push(r);
    else
      s.value = [r];
  }, u = (r, k) => {
    const z = Be(r, k) ? k : r, re = Be(k, r) ? k : r;
    return nn({ start: z, end: re });
  }, g = (r) => {
    if (Array.isArray(s.value) && s.value[0]) {
      const k = Nn(r, s.value[0]), z = u(s.value[0], r), re = z.length === 1 ? 0 : z.filter((H) => b(H)).length, d = Math.abs(k) - re;
      if (e.minRange && e.maxRange)
        return d >= +e.minRange && d <= +e.maxRange;
      if (e.minRange)
        return d >= +e.minRange;
      if (e.maxRange)
        return d <= +e.maxRange;
    }
    return !0;
  }, V = (r) => Array.isArray(s.value) && s.value.length === 2 ? e.fixedStart && (Be(r, s.value[0]) || me(r, s.value[0])) ? [s.value[0], r] : e.fixedEnd && (Ce(r, s.value[1]) || me(r, s.value[1])) ? [r, s.value[1]] : s.value : [], m = () => {
    e.autoApply && a("auto-apply");
  }, S = () => {
    e.autoApply && a("select-date");
  }, c = (r) => !nn({ start: r[0], end: r[1] }).some((z) => b(z)), q = (r) => (s.value = A(p(r.value)), m()), se = (r) => {
    const k = Ie(p(r.value), I.hours, I.minutes, U());
    e.multiDates ? n(k) : s.value = k, l(), m();
  }, ge = () => {
    D.value = s.value ? s.value.slice() : [], D.value.length === 2 && !(e.fixedStart || e.fixedEnd) && (D.value = []);
  }, Pe = (r, k) => {
    const z = [p(r.value), ut(p(r.value), +e.autoRange)];
    c(z) && (k && K(r.value), D.value = z);
  }, ee = (r) => {
    D.value = V(p(r.value));
  }, He = (r) => e.noDisabledRange ? u(D.value[0], r).some((z) => b(z)) : !1, Ge = (r, k) => {
    if (ge(), e.autoRange)
      return Pe(r, k);
    if (e.fixedStart || e.fixedEnd)
      return ee(r);
    D.value[0] ? g(p(r.value)) && !He(r.value) && (Ce(p(r.value), p(D.value[0])) ? D.value.unshift(p(r.value)) : D.value[1] = p(r.value)) : D.value[0] = p(r.value);
  }, te = (r) => {
    D.value[r] = Ie(
      D.value[r],
      I.hours[r],
      I.minutes[r],
      U(r !== 1)
    );
  }, $e = () => {
    D.value.length && (D.value[0] && !D.value[1] ? te(0) : (te(0), te(1), l()), s.value = D.value.slice(), D.value[0] && D.value[1] && e.autoApply && a("auto-apply"), D.value[0] && !D.value[1] && e.modelAuto && e.autoApply && a("auto-apply"));
  }, be = (r, k = !1) => {
    if (!(b(r.value) || !r.current && e.hideOffsetDates)) {
      if (e.weekPicker)
        return q(r);
      if (!e.range)
        return se(r);
      Qe(I.hours) && Qe(I.minutes) && !e.multiDates && (Ge(r, k), $e());
    }
  }, qe = (r) => {
    const k = r.find((z) => z.current);
    return k ? Bn(k.value) : "";
  }, Ue = (r) => {
    for (let k = r - 1; k >= 0; k--) {
      const z = ht(Re(p(), { month: X.value(k + 1), year: ae.value(k + 1) }), 1);
      C(k, ve(z), ye(z));
    }
    for (let k = r + 1; k <= Y.value.multiCalendars - 1; k++) {
      const z = nt(Re(p(), { month: X.value(k - 1), year: ae.value(k - 1) }), 1);
      C(k, ve(z), ye(z));
    }
  }, Je = (r) => L(p(), X.value(r), ae.value(r)), ft = (r) => Ie(r, I.hours, I.minutes, U()), Ot = (r, k) => {
    const z = e.monthPicker ? X.value(r) !== k.month || !k.fromNav : ae.value(r) !== k.year;
    if (C(r, k.month, k.year), Y.value.multiCalendars && !e.multiCalendarsSolo && Ue(r), e.monthPicker || e.yearPicker)
      if (e.range) {
        if (z) {
          let re = s.value ? s.value.slice() : [];
          re.length === 2 && re[1] !== null && (re = []), re.length ? Ce(Je(r), re[0]) ? re.unshift(Je(r)) : re[1] = Je(r) : re = [Je(r)], s.value = re;
        }
      } else
        s.value = Je(r);
    a("update-month-year", { instance: r, month: k.month, year: k.year }), t(e.multiCalendarsSolo ? r : void 0);
  }, It = async (r = !1) => {
    if (e.autoApply && (e.monthPicker || e.yearPicker)) {
      await bt();
      const k = e.monthPicker ? r : !1;
      e.range ? a("auto-apply", k || !s.value || s.value.length === 1) : a("auto-apply", k);
    }
    l();
  }, wt = (r, k) => {
    const z = Re(p(), { month: X.value(k), year: ae.value(k) }), re = r < 0 ? nt(z, 1) : ht(z, 1);
    E(ve(re), ye(re), r < 0, e.preventMinMaxNavigation) && (C(k, ve(re), ye(re)), Y.value.multiCalendars && !e.multiCalendarsSolo && Ue(k), t());
  }, mt = (r) => {
    sn(r) && sn(s.value) && Qe(I.hours) && Qe(I.minutes) ? (r[0] && s.value[0] && (s.value[0] = Ie(r[0], I.hours[0], I.minutes[0], U())), r[1] && s.value[1] && (s.value[1] = Ie(r[1], I.hours[1], I.minutes[1], U(!1)))) : e.multiDates && Array.isArray(s.value) ? s.value[s.value.length - 1] = ft(r) : !e.range && !un(r) && (s.value = ft(r)), a("time-update");
  }, Vt = (r, k = !0, z = !1) => {
    const re = k ? r : I.hours, d = !k && !z ? r : I.minutes, H = z ? r : I.seconds;
    if (e.range && un(s.value) && Qe(re) && Qe(d) && Qe(H) && !e.disableTimeRangeValidation) {
      const pe = (Ve) => Ie(s.value[Ve], re[Ve], d[Ve], H[Ve]), De = (Ve) => Jt(s.value[Ve], 0);
      if (me(s.value[0], s.value[1]) && (qt(pe(0), De(1)) || Zt(pe(1), De(0))))
        return;
    }
    if ($("hours", re), $("minutes", d), $("seconds", H), s.value)
      if (e.multiDates) {
        const pe = i();
        pe && mt(pe);
      } else
        mt(s.value);
    else
      e.timePicker && mt(e.range ? [p(), p()] : p());
    l();
  }, Yt = (r, k) => {
    e.monthChangeOnScroll && wt(e.monthChangeOnScroll !== "inverse" ? -r.deltaY : r.deltaY, k);
  }, Lt = (r, k, z = !1) => {
    e.monthChangeOnArrows && e.vertical === z && $t(r, k);
  }, $t = (r, k) => {
    wt(r === "right" ? -1 : 1, k);
  };
  return {
    time: I,
    month: X,
    year: ae,
    modelValue: s,
    monthYearSelect: It,
    isDisabled: b,
    updateTime: Vt,
    getWeekNum: qe,
    selectDate: be,
    updateMonthYear: Ot,
    handleScroll: Yt,
    getMarker: (r) => e.markers.find((k) => me(T(r.value), T(k.date))),
    handleArrow: Lt,
    handleSwipe: $t,
    selectCurrentDate: () => {
      e.range ? s.value && Array.isArray(s.value) && s.value[0] ? s.value = Ce(p(), s.value[0]) ? [p(), s.value[0]] : [s.value[0], p()] : s.value = [p()] : s.value = p(), S();
    },
    presetDateRange: (r, k) => {
      k || r.length && r.length <= 2 && e.range && (s.value = r.map((z) => p(z)), S());
    }
  };
}, Ua = (e, a, l) => {
  const t = W(), {
    getZonedToUtc: h,
    getZonedDate: b,
    formatDate: T,
    getDefaultPattern: A,
    checkRangeEnabled: L,
    checkPartialRangeValue: E,
    isValidDate: Y,
    setDateMonthOrYear: s,
    defaults: D
  } = Oe(a), N = W("");
  kt(t, () => {
    e("internal-model-change", t.value);
  });
  const I = (c) => {
    const q = c || p(), se = {
      hours: Ke(q),
      minutes: ze(q)
    };
    return a.enableSeconds && (se.seconds = dt(q)), se;
  }, X = (c) => ({ month: ve(c), year: ye(c) }), ae = (c) => Array.isArray(c) ? L(() => [
    lt(p(), c[0]),
    c[1] ? lt(p(), c[1]) : E()
  ]) : lt(p(), +c), C = (c) => Array.isArray(c) ? [
    Ie(null, +c[0].hours, +c[0].minutes, c[0].seconds),
    Ie(null, +c[1].hours, +c[1].minutes, c[1].seconds)
  ] : Ie(null, c.hours, c.minutes, c == null ? void 0 : c.seconds), $ = (c) => Array.isArray(c) ? L(() => [
    s(null, +c[0].month, +c[0].year),
    c[1] ? s(null, +c[1].month, +c[1].year) : E()
  ]) : s(null, +c.month, +c.year), x = (c) => {
    if (Array.isArray(c))
      return c.map((q) => K(q));
    throw new Error(Rt.dateArr("multi-dates"));
  }, J = (c) => {
    if (Array.isArray(c))
      return [p(c[0]), p(c[1])];
    throw new Error(Rt.dateArr("week-picker"));
  }, Q = (c) => a.modelAuto ? Array.isArray(c) ? [K(c[0]), K(c[1])] : a.autoApply ? [K(c)] : [K(c), null] : Array.isArray(c) ? L(() => [
    K(c[0]),
    c[1] ? K(c[1]) : E()
  ]) : K(c), R = () => {
    Array.isArray(t.value) && a.range && t.value.length === 1 && t.value.push(E());
  }, f = () => {
    const c = t.value;
    return [
      n(c[0]),
      c[1] ? n(c[1]) : E()
    ];
  }, O = () => t.value[1] ? f() : n(we(t.value[0])), j = () => t.value.map((c) => n(c)), le = () => (R(), a.modelAuto ? O() : a.multiDates ? j() : Array.isArray(t.value) ? L(() => f()) : n(we(t.value))), B = (c) => c ? a.timePicker ? C(we(c)) : a.monthPicker ? $(we(c)) : a.yearPicker ? ae(we(c)) : a.multiDates ? x(we(c)) : a.weekPicker ? J(we(c)) : Q(we(c)) : null, U = (c) => {
    const q = B(c);
    Y(we(q)) ? (t.value = we(q), _()) : (t.value = null, N.value = "");
  }, y = () => {
    var q;
    const c = (se) => {
      var ge;
      return yt(se, (ge = D.value.textInputOptions) == null ? void 0 : ge.format);
    };
    return `${c(t.value[0])} ${(q = D.value.textInputOptions) == null ? void 0 : q.rangeSeparator} ${t.value[1] ? c(t.value[1]) : ""}`;
  }, i = () => {
    var c;
    return l.value && t.value ? Array.isArray(t.value) ? y() : yt(t.value, (c = D.value.textInputOptions) == null ? void 0 : c.format) : T(t.value);
  }, M = () => {
    var c;
    return t.value ? a.multiDates ? t.value.map((q) => T(q)).join("; ") : a.textInput && typeof ((c = D.value.textInputOptions) == null ? void 0 : c.format) == "string" ? i() : T(t.value) : "";
  }, _ = () => {
    !a.format || typeof a.format == "string" ? N.value = M() : N.value = a.format(t.value);
  }, K = (c) => {
    if (a.utc) {
      const q = new Date(c);
      return a.utc === "preserve" ? new Date(q.getTime() + q.getTimezoneOffset() * 6e4) : q;
    }
    return a.modelType ? a.modelType === "date" || a.modelType === "timestamp" ? b(new Date(c)) : a.modelType === "format" && (typeof a.format == "string" || !a.format) ? Gt(c, A(), new Date()) : b(Gt(c, a.modelType, new Date())) : b(new Date(c));
  }, n = (c) => a.utc ? Aa(c, a.utc === "preserve") : a.modelType ? a.modelType === "timestamp" ? +h(c) : a.modelType === "format" && (typeof a.format == "string" || !a.format) ? T(h(c)) : T(h(c), a.modelType) : h(c), u = (c) => {
    e("update:model-value", c);
  }, g = (c) => Array.isArray(t.value) ? [
    c(t.value[0]),
    t.value[1] ? c(t.value[1]) : E()
  ] : c(we(t.value)), V = (c) => u(we(g(c)));
  return {
    inputValue: N,
    internalModelValue: t,
    checkBeforeEmit: () => t.value ? a.range ? a.partialRange ? t.value.length >= 1 : t.value.length === 2 : !!t.value : !1,
    parseExternalModelValue: U,
    formatInputValue: _,
    emitModelValue: () => (_(), a.monthPicker ? V(X) : a.timePicker ? V(I) : a.yearPicker ? V(ye) : a.weekPicker ? u(t.value) : u(le()))
  };
}, Ka = (e, a) => {
  const { validateMonthYearInRange: l, validateMaxDate: t, validateMinDate: h, defaults: b } = Oe(e), T = (s, D) => {
    let N = s;
    return b.value.filters.months.includes(ve(N)) ? (N = D ? nt(s, 1) : ht(s, 1), T(N, D)) : N;
  }, A = (s, D) => {
    let N = s;
    return b.value.filters.years.includes(ye(N)) ? (N = D ? On(s, 1) : In(s, 1), A(N, D)) : N;
  }, L = (s) => {
    const D = Re(new Date(), { month: e.month, year: e.year });
    let N = s ? nt(D, 1) : ht(D, 1), I = ve(N), X = ye(N);
    b.value.filters.months.includes(I) && (N = T(N, s), I = ve(N), X = ye(N)), b.value.filters.years.includes(X) && (N = A(N, s), X = ye(N)), l(I, X, s, e.preventMinMaxNavigation) && E(I, X);
  }, E = (s, D) => {
    a("update-month-year", { month: s, year: D });
  }, Y = F(() => (s) => {
    if (!e.preventMinMaxNavigation || s && !e.maxDate || !s && !e.minDate)
      return !1;
    const D = Re(new Date(), { month: e.month, year: e.year }), N = s ? nt(D, 1) : ht(D, 1), I = [ve(N), ye(N)];
    return s ? !t(...I) : !h(...I);
  });
  return { handleMonthYearChange: L, isDisabled: Y, updateMonthYear: E };
};
var Tt = /* @__PURE__ */ ((e) => (e.center = "center", e.left = "left", e.right = "right", e))(Tt || {});
const za = (e, a, l, t) => {
  const h = W({
    top: "0",
    left: "0",
    transform: "none"
  }), b = W(!1), T = Ht(t, "teleportCenter");
  kt(T, () => {
    ae();
  });
  const A = (R) => {
    const f = R.getBoundingClientRect();
    return {
      left: f.left + window.scrollX,
      top: f.top + window.scrollY
    };
  }, L = (R) => {
    const f = R.getBoundingClientRect();
    let O = 0, j = 0;
    for (; R && !isNaN(R.offsetLeft) && !isNaN(R.offsetTop); )
      O += R.offsetLeft - R.scrollLeft, j = f.top + R.scrollTop, R = R.offsetParent;
    return { top: j, left: O };
  }, E = (R, f) => {
    h.value.left = `${R + f}px`, h.value.transform = "translateX(-100%)";
  }, Y = (R) => {
    h.value.left = `${R}px`, h.value.transform = "translateX(0)";
  }, s = (R, f, O = !1) => {
    t.position === Tt.left && Y(R), t.position === Tt.right && E(R, f), t.position === Tt.center && (h.value.left = `${R + f / 2}px`, h.value.transform = O ? "translate(-50%, -50%)" : "translateX(-50%)");
  }, D = (R) => {
    const { width: f, height: O } = R.getBoundingClientRect(), { top: j, left: le } = t.altPosition ? L(R) : A(R);
    return { top: j, left: le, width: f, height: O };
  }, N = () => {
    const R = Se(a);
    if (R) {
      const { top: f, left: O, width: j, height: le } = D(R);
      h.value.top = `${f + le / 2}px`, h.value.transform = "translateY(-50%)", s(O, j, !0);
    }
  }, I = () => {
    h.value.left = "50%", h.value.top = "50%", h.value.transform = "translate(-50%, -50%)", h.value.position = "fixed";
  }, X = () => {
    const R = Se(a);
    h.value = t.altPosition(R);
  }, ae = (R = !0) => {
    if (!t.inline)
      return T.value ? I() : t.altPosition && typeof t.altPosition != "boolean" ? X() : (R && l("recalculate-position"), Q());
  }, C = (R, f) => {
    const { top: O, left: j, height: le, width: B } = D(R);
    h.value.top = `${le + O + +t.offset}px`, s(j, B), x(R, f), b.value = !1;
  }, $ = (R, f) => {
    const { top: O, left: j, width: le } = D(R), { height: B } = f.getBoundingClientRect();
    h.value.top = `${O - B - +t.offset}px`, s(j, le), x(R, f), b.value = !0;
  }, x = (R, f) => {
    if (t.autoPosition) {
      const { left: O, width: j } = D(R), { left: le, right: B } = f.getBoundingClientRect();
      if (le < 0)
        return Y(O);
      if (B > document.documentElement.clientWidth)
        return E(O, j);
    }
  }, J = (R, f) => {
    const { height: O } = f.getBoundingClientRect(), { top: j, height: le } = R.getBoundingClientRect(), U = window.innerHeight - j - le, y = j;
    return O <= U ? C(R, f) : O > U && O <= y ? $(R, f) : U >= y ? C(R, f) : $(R, f);
  }, Q = () => {
    const R = Se(a), f = Se(e);
    if (R && f)
      return t.autoPosition ? J(R, f) : C(R, f);
  };
  return { openOnTop: b, menuPosition: h, setMenuPosition: ae, setInitialPosition: N };
}, st = [
  { name: "clock-icon", use: ["time", "calendar"] },
  { name: "arrow-left", use: ["month-year", "calendar"] },
  { name: "arrow-right", use: ["month-year", "calendar"] },
  { name: "arrow-up", use: ["time", "calendar"] },
  { name: "arrow-down", use: ["time", "calendar"] },
  { name: "calendar-icon", use: ["month-year", "time", "calendar"] },
  { name: "day", use: ["calendar"] },
  { name: "month-overlay-value", use: ["calendar", "month-year"] },
  { name: "year-overlay-value", use: ["calendar", "month-year"] },
  { name: "hours-overlay-value", use: ["calendar", "time"] },
  { name: "minutes-overlay-value", use: ["calendar", "time"] },
  { name: "seconds-overlay-value", use: ["calendar", "time"] },
  { name: "hours", use: ["calendar", "time"] },
  { name: "minutes", use: ["calendar", "time"] },
  { name: "month", use: ["calendar", "month-year"] },
  { name: "year", use: ["calendar", "month-year"] },
  { name: "action-select", use: ["action"] },
  { name: "action-preview", use: ["action"] },
  { name: "calendar-header", use: ["calendar"] },
  { name: "marker-tooltip", use: ["calendar"] },
  { name: "now-button", use: [] },
  { name: "time-picker-overlay", use: ["calendar", "time"] },
  { name: "am-pm-button", use: ["calendar", "time"] },
  { name: "left-sidebar", use: ["menu"] },
  { name: "right-sidebar", use: ["menu"] },
  { name: "month-year", use: ["month-year"] },
  { name: "time-picker", use: ["menu"] },
  { name: "action-row", use: ["menu"] }
], ja = [{ name: "trigger" }, { name: "input-icon" }, { name: "clear-icon" }, { name: "dp-input" }], Ha = {
  all: () => st,
  monthYear: () => st.filter((e) => e.use.includes("month-year")),
  input: () => ja,
  timePicker: () => st.filter((e) => e.use.includes("time")),
  action: () => st.filter((e) => e.use.includes("action")),
  calendar: () => st.filter((e) => e.use.includes("calendar")),
  menu: () => st.filter((e) => e.use.includes("menu"))
}, at = (e, a, l) => {
  const t = [];
  return Ha[a]().forEach((h) => {
    e[h.name] && t.push(h.name);
  }), l && l.length && l.forEach((h) => {
    h.slot && t.push(h.slot);
  }), t;
}, Nt = (e) => ({ transitionName: F(() => (l) => e && typeof e != "boolean" ? l ? e.open : e.close : ""), showTransition: !!e }), Ze = {
  multiCalendars: { type: [Boolean, Number, String], default: null },
  modelValue: { type: [String, Date, Array, Object, Number], default: null },
  modelType: { type: String, default: null },
  position: { type: String, default: "center" },
  dark: { type: Boolean, default: !1 },
  format: {
    type: [String, Function],
    default: () => null
  },
  closeOnScroll: { type: Boolean, default: !1 },
  autoPosition: { type: Boolean, default: !0 },
  closeOnAutoApply: { type: Boolean, default: !0 },
  teleport: { type: [String, Object], default: "body" },
  altPosition: { type: [Boolean, Function], default: !1 },
  transitions: { type: [Boolean, Object], default: !0 },
  formatLocale: { type: Object, default: null },
  utc: { type: [Boolean, String], default: !1 },
  ariaLabels: { type: Object, default: () => ({}) },
  offset: { type: [Number, String], default: 10 },
  hideNavigation: { type: Array, default: () => [] },
  timezone: { type: String, default: null },
  vertical: { type: Boolean, default: !1 },
  disableMonthYearSelect: { type: Boolean, default: !1 },
  menuClassName: { type: String, default: null },
  dayClass: { type: Function, default: null },
  yearRange: { type: Array, default: () => [1900, 2100] },
  multiCalendarsSolo: { type: Boolean, default: !1 },
  calendarCellClassName: { type: String, default: null },
  enableTimePicker: { type: Boolean, default: !0 },
  autoApply: { type: Boolean, default: !1 },
  disabledDates: { type: [Array, Function], default: () => [] },
  monthNameFormat: { type: String, default: "short" },
  startDate: { type: [Date, String], default: null },
  startTime: { type: [Object, Array], default: null },
  monthYearComponent: { type: Object, default: null },
  timePickerComponent: { type: Object, default: null },
  actionRowComponent: { type: Object, default: null },
  hideOffsetDates: { type: Boolean, default: !1 },
  autoRange: { type: [Number, String], default: null },
  noToday: { type: Boolean, default: !1 },
  disabledWeekDays: { type: Array, default: () => [] },
  allowedDates: { type: Array, default: () => [] },
  showNowButton: { type: Boolean, default: !1 },
  nowButtonLabel: { type: String, default: "Now" },
  markers: { type: Array, default: () => [] },
  modeHeight: { type: [Number, String], default: 255 },
  escClose: { type: Boolean, default: !0 },
  spaceConfirm: { type: Boolean, default: !0 },
  monthChangeOnArrows: { type: Boolean, default: !0 },
  presetRanges: { type: Array, default: () => [] },
  flow: { type: Array, default: () => [] },
  preventMinMaxNavigation: { type: Boolean, default: !1 },
  minRange: { type: [Number, String], default: null },
  maxRange: { type: [Number, String], default: null },
  multiDatesLimit: { type: [Number, String], default: null },
  reverseYears: { type: Boolean, default: !1 },
  keepActionRow: { type: Boolean, default: !1 },
  weekPicker: { type: Boolean, default: !1 },
  filters: { type: Object, default: () => ({}) },
  arrowNavigation: { type: Boolean, default: !1 },
  multiStatic: { type: Boolean, default: !0 },
  disableTimeRangeValidation: { type: Boolean, default: !1 },
  highlight: {
    type: [Array, Function],
    default: null
  },
  highlightWeekDays: {
    type: Array,
    default: null
  },
  highlightDisabledDays: { type: Boolean, default: !1 },
  teleportCenter: { type: Boolean, default: !1 },
  locale: { type: String, default: "en-Us" },
  weekNumName: { type: String, default: "W" },
  weekStart: { type: [Number, String], default: 1 },
  weekNumbers: { type: Boolean, default: !1 },
  calendarClassName: { type: String, default: null },
  noSwipe: { type: Boolean, default: !1 },
  monthChangeOnScroll: { type: [Boolean, String], default: !0 },
  dayNames: {
    type: [Function, Array],
    default: null
  },
  monthPicker: { type: Boolean, default: !1 },
  customProps: { type: Object, default: null },
  yearPicker: { type: Boolean, default: !1 },
  modelAuto: { type: Boolean, default: !1 },
  selectText: { type: String, default: "Select" },
  cancelText: { type: String, default: "Cancel" },
  previewFormat: {
    type: [String, Function],
    default: () => ""
  },
  multiDates: { type: Boolean, default: !1 },
  partialRange: { type: Boolean, default: !0 },
  ignoreTimeValidation: { type: Boolean, default: !1 },
  minDate: { type: [Date, String], default: null },
  maxDate: { type: [Date, String], default: null },
  minTime: { type: Object, default: null },
  maxTime: { type: Object, default: null },
  name: { type: String, default: null },
  placeholder: { type: String, default: "" },
  hideInputIcon: { type: Boolean, default: !1 },
  clearable: { type: Boolean, default: !0 },
  state: { type: Boolean, default: null },
  required: { type: Boolean, default: !1 },
  autocomplete: { type: String, default: "off" },
  inputClassName: { type: String, default: null },
  inlineWithInput: { type: Boolean, default: !1 },
  textInputOptions: { type: Object, default: () => null },
  fixedStart: { type: Boolean, default: !1 },
  fixedEnd: { type: Boolean, default: !1 },
  timePicker: { type: Boolean, default: !1 },
  enableSeconds: { type: Boolean, default: !1 },
  is24: { type: Boolean, default: !0 },
  noHoursOverlay: { type: Boolean, default: !1 },
  noMinutesOverlay: { type: Boolean, default: !1 },
  noSecondsOverlay: { type: Boolean, default: !1 },
  hoursGridIncrement: { type: [String, Number], default: 1 },
  minutesGridIncrement: { type: [String, Number], default: 5 },
  secondsGridIncrement: { type: [String, Number], default: 5 },
  hoursIncrement: { type: [Number, String], default: 1 },
  minutesIncrement: { type: [Number, String], default: 1 },
  secondsIncrement: { type: [Number, String], default: 1 },
  range: { type: Boolean, default: !1 },
  uid: { type: String, default: null },
  disabled: { type: Boolean, default: !1 },
  readonly: { type: Boolean, default: !1 },
  inline: { type: Boolean, default: !1 },
  textInput: { type: Boolean, default: !1 },
  onClickOutside: { type: Function, default: null },
  noDisabledRange: { type: Boolean, default: !1 },
  sixWeeks: { type: Boolean, default: !1 }
}, Ga = ["aria-label", "aria-disabled", "aria-readonly"], xa = {
  key: 1,
  class: "dp__input_wrap"
}, Xa = ["id", "name", "inputmode", "placeholder", "disabled", "readonly", "required", "value", "autocomplete", "onKeydown"], Za = {
  key: 2,
  class: "dp__input_icon"
}, qa = {
  key: 4,
  class: "dp__clear_icon"
}, Ja = /* @__PURE__ */ Ee({
  __name: "DatepickerInput",
  props: {
    isMenuOpen: { type: Boolean, default: !1 },
    inputValue: { type: String, default: "" },
    ...Ze
  },
  emits: [
    "clear",
    "open",
    "update:input-value",
    "set-input-date",
    "close",
    "select-date",
    "set-empty-date",
    "toggle",
    "focus-prev",
    "focus",
    "blur"
  ],
  setup(e, { expose: a, emit: l }) {
    const t = e, { getDefaultPattern: h, isValidDate: b, defaults: T } = Oe(t), A = W(), L = W(null), E = W(!1), Y = F(
      () => ({
        dp__pointer: !t.disabled && !t.readonly && !t.textInput,
        dp__disabled: t.disabled,
        dp__input_readonly: !t.textInput,
        dp__input: !0,
        dp__input_icon_pad: !t.hideInputIcon,
        dp__input_valid: t.state,
        dp__input_invalid: t.state === !1,
        dp__input_focus: E.value || t.isMenuOpen,
        dp__input_reg: !t.textInput,
        [t.inputClassName]: !!t.inputClassName
      })
    ), s = () => {
      l("set-input-date", null), t.autoApply && (l("set-empty-date"), A.value = null);
    }, D = (f) => {
      var O;
      return Ma(f, ((O = T.value.textInputOptions) == null ? void 0 : O.format) || h());
    }, N = (f) => {
      const { rangeSeparator: O } = T.value.textInputOptions;
      if (t.range) {
        const [j, le] = f.split(`${O}`);
        if (j && le) {
          const B = D(j.trim()), U = D(le.trim());
          A.value = B && U ? [B, U] : null;
        }
      } else
        A.value = D(f);
    }, I = (f) => {
      var j;
      const { value: O } = f.target;
      O !== "" ? (((j = T.value.textInputOptions) == null ? void 0 : j.openMenu) && !t.isMenuOpen && l("open"), N(O), l("set-input-date", A.value)) : s(), l("update:input-value", O);
    }, X = () => {
      var f, O;
      ((f = T.value.textInputOptions) == null ? void 0 : f.enterSubmit) && b(A.value) && t.inputValue !== "" ? (l("set-input-date", A.value, !0), A.value = null) : ((O = T.value.textInputOptions) == null ? void 0 : O.enterSubmit) && t.inputValue === "" && (A.value = null, l("clear"));
    }, ae = () => {
      var f, O;
      ((f = T.value.textInputOptions) == null ? void 0 : f.tabSubmit) && b(A.value) && t.inputValue !== "" ? (l("set-input-date", A.value, !0), A.value = null) : ((O = T.value.textInputOptions) == null ? void 0 : O.tabSubmit) && t.inputValue === "" && (A.value = null, l("clear"));
    }, C = () => {
      E.value = !0, l("focus");
    }, $ = (f) => {
      var O;
      f.preventDefault(), f.stopImmediatePropagation(), f.stopPropagation(), t.textInput && ((O = T.value.textInputOptions) == null ? void 0 : O.openMenu) ? t.isMenuOpen ? T.value.textInputOptions.enterSubmit && l("select-date") : l("open") : t.textInput || l("toggle");
    }, x = () => {
      E.value = !1, t.isMenuOpen || l("blur"), t.autoApply && t.textInput && A.value && (l("set-input-date", A.value), l("select-date"), A.value = null);
    }, J = () => {
      l("clear");
    }, Q = (f) => {
      t.textInput || f.preventDefault();
    };
    return a({
      focusInput: () => {
        L.value && L.value.focus({ preventScroll: !0 });
      }
    }), (f, O) => {
      var j;
      return v(), P("div", {
        onClick: $,
        "aria-label": (j = o(T).ariaLabels) == null ? void 0 : j.input,
        role: "textbox",
        "aria-multiline": "false",
        "aria-disabled": f.disabled,
        "aria-readonly": f.readonly
      }, [
        f.$slots.trigger && !f.$slots["dp-input"] && !f.inline ? G(f.$slots, "trigger", { key: 0 }) : w("", !0),
        !f.$slots.trigger && (!f.inline || f.inlineWithInput) ? (v(), P("div", xa, [
          f.$slots["dp-input"] && !f.$slots.trigger && !f.inline ? G(f.$slots, "dp-input", {
            key: 0,
            value: e.inputValue,
            onInput: I,
            onEnter: X,
            onTab: ae,
            onClear: J
          }) : w("", !0),
          f.$slots["dp-input"] ? w("", !0) : (v(), P("input", {
            key: 1,
            ref_key: "inputRef",
            ref: L,
            id: f.uid ? `dp-input-${f.uid}` : void 0,
            name: f.name,
            class: he(o(Y)),
            inputmode: f.textInput ? "text" : "none",
            placeholder: f.placeholder,
            disabled: f.disabled,
            readonly: f.readonly,
            required: f.required,
            value: e.inputValue,
            autocomplete: f.autocomplete,
            onInput: I,
            onKeydown: [
              oe($, ["enter"]),
              oe(ae, ["tab"])
            ],
            onBlur: x,
            onFocus: C,
            onKeypress: Q
          }, null, 42, Xa)),
          f.$slots["input-icon"] && !f.hideInputIcon ? (v(), P("span", Za, [
            G(f.$slots, "input-icon")
          ])) : w("", !0),
          !f.$slots["input-icon"] && !f.hideInputIcon && !f.$slots["dp-input"] ? (v(), ce(o(Bt), {
            key: 3,
            class: "dp__input_icon dp__input_icons"
          })) : w("", !0),
          f.$slots["clear-icon"] && e.inputValue && f.clearable && !f.disabled && !f.readonly ? (v(), P("span", qa, [
            G(f.$slots, "clear-icon", { clear: J })
          ])) : w("", !0),
          f.clearable && !f.$slots["clear-icon"] && e.inputValue && !f.disabled && !f.readonly ? (v(), ce(o(Jn), {
            key: 5,
            class: "dp__clear_icon dp__input_icons",
            "data-test": "clear-icon",
            onClick: je(J, ["stop", "prevent"])
          }, null, 8, ["onClick"])) : w("", !0)
        ])) : w("", !0)
      ], 8, Ga);
    };
  }
}), Qa = { class: "dp__selection_preview" }, el = { class: "dp__action_buttons" }, tl = ["onKeydown"], nl = /* @__PURE__ */ Ee({
  __name: "ActionRow",
  props: {
    calendarWidth: { type: Number, default: 0 },
    menuMount: { type: Boolean, default: !1 },
    internalModelValue: { type: [Date, Array], default: null },
    ...Ze
  },
  emits: ["close-picker", "select-date", "invalid-select"],
  setup(e, { emit: a }) {
    const l = e, { formatDate: t, isValidTime: h, defaults: b } = Oe(l), { buildMatrix: T } = Xe(), A = W(null), L = W(null);
    Le(() => {
      l.arrowNavigation && T([Se(A), Se(L)], "actionRow");
    });
    const E = F(() => l.range && !l.partialRange && l.internalModelValue ? l.internalModelValue.length === 2 : !0), Y = F(() => ({
      dp__action: !0,
      dp__select: !0,
      dp__action_disabled: !s.value || !D.value || !E.value
    })), s = F(() => !l.enableTimePicker || l.ignoreTimeValidation ? !0 : h(l.internalModelValue)), D = F(() => l.monthPicker ? ae(l.internalModelValue) : !0), N = () => {
      const $ = b.value.previewFormat;
      return l.timePicker || l.monthPicker, $(we(l.internalModelValue));
    }, I = () => {
      const $ = l.internalModelValue;
      return b.value.multiCalendars > 0 ? `${t($[0])} - ${t($[1])}` : [t($[0]), t($[1])];
    }, X = F(() => !l.internalModelValue || !l.menuMount ? "" : typeof b.value.previewFormat == "string" ? Array.isArray(l.internalModelValue) ? l.internalModelValue.length === 2 && l.internalModelValue[1] ? I() : l.multiDates ? l.internalModelValue.map(($) => `${t($)}`) : l.modelAuto ? `${t(l.internalModelValue[0])}` : `${t(l.internalModelValue[0])} -` : t(l.internalModelValue) : N()), ae = ($) => {
      if (!l.monthPicker)
        return !0;
      let x = !0;
      return l.minDate && l.maxDate ? Be(p($), p(l.minDate)) && Ce(p($), p(l.maxDate)) : (l.minDate && (x = Be(p($), p(l.minDate))), l.maxDate && (x = Ce(p($), p(l.maxDate))), x);
    }, C = () => {
      s.value && D.value && E.value ? a("select-date") : a("invalid-select");
    };
    return ($, x) => (v(), P("div", {
      class: "dp__action_row",
      style: it(e.calendarWidth ? { width: `${e.calendarWidth}px` } : {})
    }, [
      ne("div", Qa, [
        $.$slots["action-preview"] ? G($.$slots, "action-preview", {
          key: 0,
          value: e.internalModelValue
        }) : w("", !0),
        $.$slots["action-preview"] ? w("", !0) : (v(), P(de, { key: 1 }, [
          Array.isArray(o(X)) ? w("", !0) : (v(), P(de, { key: 0 }, [
            Fe(Ae(o(X)), 1)
          ], 64)),
          Array.isArray(o(X)) ? (v(!0), P(de, { key: 1 }, ke(o(X), (J, Q) => (v(), P("div", { key: Q }, Ae(J), 1))), 128)) : w("", !0)
        ], 64))
      ]),
      ne("div", el, [
        $.$slots["action-select"] ? G($.$slots, "action-select", {
          key: 0,
          value: e.internalModelValue
        }) : w("", !0),
        $.$slots["action-select"] ? w("", !0) : (v(), P(de, { key: 1 }, [
          $.inline ? w("", !0) : (v(), P("span", {
            key: 0,
            class: "dp__action dp__cancel",
            ref_key: "cancelButtonRef",
            ref: A,
            tabindex: "0",
            onClick: x[0] || (x[0] = (J) => $.$emit("close-picker")),
            onKeydown: [
              x[1] || (x[1] = oe((J) => $.$emit("close-picker"), ["enter"])),
              x[2] || (x[2] = oe((J) => $.$emit("close-picker"), ["space"]))
            ]
          }, Ae($.cancelText), 545)),
          ne("span", {
            class: he(o(Y)),
            tabindex: "0",
            onKeydown: [
              oe(C, ["enter"]),
              oe(C, ["space"])
            ],
            onClick: C,
            "data-test": "select-button",
            ref_key: "selectButtonRef",
            ref: L
          }, Ae($.selectText), 43, tl)
        ], 64))
      ])
    ], 4));
  }
}), al = ["aria-label"], ll = {
  class: "dp__calendar_header",
  role: "row"
}, rl = {
  key: 0,
  class: "dp__calendar_header_item",
  role: "gridcell"
}, ol = /* @__PURE__ */ ne("div", { class: "dp__calendar_header_separator" }, null, -1), sl = ["aria-label"], il = {
  key: 0,
  role: "gridcell",
  class: "dp__calendar_item dp__week_num"
}, ul = { class: "dp__cell_inner" }, dl = ["aria-selected", "aria-disabled", "aria-label", "data-test", "onClick", "onKeydown", "onMouseover"], cl = /* @__PURE__ */ ne("div", { class: "dp__arrow_bottom_tp" }, null, -1), fl = /* @__PURE__ */ Ee({
  __name: "Calendar",
  props: {
    mappedDates: { type: Array, default: () => [] },
    getWeekNum: {
      type: Function,
      default: () => ""
    },
    specificMode: { type: Boolean, default: !1 },
    instance: { type: Number, default: 0 },
    month: { type: Number, default: 0 },
    year: { type: Number, default: 0 },
    ...Ze
  },
  emits: [
    "select-date",
    "set-hover-date",
    "handle-scroll",
    "mount",
    "handle-swipe",
    "handle-space"
  ],
  setup(e, { expose: a, emit: l }) {
    const t = e, { buildMultiLevelMatrix: h } = Xe(), { setDateMonthOrYear: b, defaults: T } = Oe(t), A = W(null), L = W({ bottom: "", left: "", transform: "" }), E = W([]), Y = W(null), s = W(!0), D = W(""), N = W({ startX: 0, endX: 0, startY: 0, endY: 0 }), I = F(() => t.dayNames ? Array.isArray(t.dayNames) ? t.dayNames : t.dayNames(t.locale, +t.weekStart) : Pa(t.locale, +t.weekStart));
    Le(() => {
      l("mount", { cmp: "calendar", refs: E }), t.noSwipe || Y.value && (Y.value.addEventListener("touchstart", O, { passive: !1 }), Y.value.addEventListener("touchend", j, { passive: !1 }), Y.value.addEventListener("touchmove", le, { passive: !1 })), t.monthChangeOnScroll && Y.value && Y.value.addEventListener("wheel", y, { passive: !1 });
    });
    const X = (i) => i ? t.vertical ? "vNext" : "next" : t.vertical ? "vPrevious" : "previous", ae = (i, M) => {
      if (t.transitions) {
        const _ = We(b(p(), t.month, t.year));
        D.value = Be(We(b(p(), i, M)), _) ? T.value.transitions[X(!0)] : T.value.transitions[X(!1)], s.value = !1, bt(() => {
          s.value = !0;
        });
      }
    }, C = F(
      () => ({
        dp__calendar_wrap: !0,
        [t.calendarClassName]: !!t.calendarClassName
      })
    ), $ = F(() => (i) => {
      const M = Ba(i);
      return {
        dp__marker_dot: M.type === "dot",
        dp__marker_line: M.type === "line"
      };
    }), x = F(() => (i) => me(i, A.value)), J = F(() => ({
      dp__calendar: !0,
      dp__calendar_next: T.value.multiCalendars > 0 && t.instance !== 0
    })), Q = F(() => t.specificMode ? { height: `${t.modeHeight}px` } : void 0), R = (i, M, _) => {
      var K, n;
      if (l("set-hover-date", i), (n = (K = i.marker) == null ? void 0 : K.tooltip) != null && n.length) {
        const u = Se(E.value[M][_]);
        if (u) {
          const { width: g, height: V } = u.getBoundingClientRect();
          L.value = {
            bottom: `${V}px`,
            left: `${g / 2}px`,
            transform: "translateX(-50%)"
          }, A.value = i.value;
        }
      }
    }, f = () => {
      A.value = null;
    }, O = (i) => {
      N.value.startX = i.changedTouches[0].screenX, N.value.startY = i.changedTouches[0].screenY;
    }, j = (i) => {
      N.value.endX = i.changedTouches[0].screenX, N.value.endY = i.changedTouches[0].screenY, B();
    }, le = (i) => {
      t.vertical && !t.inline && i.preventDefault();
    }, B = () => {
      const i = t.vertical ? "Y" : "X";
      Math.abs(N.value[`start${i}`] - N.value[`end${i}`]) > 10 && l("handle-swipe", N.value[`start${i}`] > N.value[`end${i}`] ? "right" : "left");
    }, U = (i, M, _) => {
      i && (Array.isArray(E.value[M]) ? E.value[M][_] = i : E.value[M] = [i]), t.arrowNavigation && h(E.value, "calendar");
    }, y = (i) => {
      t.monthChangeOnScroll && (i.preventDefault(), l("handle-scroll", i));
    };
    return a({ triggerTransition: ae }), (i, M) => {
      var _;
      return v(), P("div", {
        class: he(o(J))
      }, [
        ne("div", {
          style: it(o(Q))
        }, [
          e.specificMode ? w("", !0) : (v(), P("div", {
            key: 0,
            ref_key: "calendarWrapRef",
            ref: Y,
            class: he(o(C)),
            role: "grid",
            "aria-label": (_ = o(T).ariaLabels) == null ? void 0 : _.calendarWrap
          }, [
            ne("div", ll, [
              i.weekNumbers ? (v(), P("div", rl, Ae(i.weekNumName), 1)) : w("", !0),
              (v(!0), P(de, null, ke(o(I), (K, n) => (v(), P("div", {
                class: "dp__calendar_header_item",
                role: "gridcell",
                key: n,
                "data-test": "calendar-header"
              }, [
                i.$slots["calendar-header"] ? G(i.$slots, "calendar-header", {
                  key: 0,
                  day: K,
                  index: n
                }) : w("", !0),
                i.$slots["calendar-header"] ? w("", !0) : (v(), P(de, { key: 1 }, [
                  Fe(Ae(K), 1)
                ], 64))
              ]))), 128))
            ]),
            ol,
            xe(ct, {
              name: D.value,
              css: !!i.transitions
            }, {
              default: ue(() => {
                var K;
                return [
                  s.value ? (v(), P("div", {
                    key: 0,
                    class: "dp__calendar",
                    role: "grid",
                    "aria-label": (K = o(T).ariaLabels) == null ? void 0 : K.calendarDays
                  }, [
                    (v(!0), P(de, null, ke(e.mappedDates, (n, u) => (v(), P("div", {
                      class: "dp__calendar_row",
                      role: "row",
                      key: u
                    }, [
                      i.weekNumbers ? (v(), P("div", il, [
                        ne("div", ul, Ae(e.getWeekNum(n.days)), 1)
                      ])) : w("", !0),
                      (v(!0), P(de, null, ke(n.days, (g, V) => {
                        var m, S, c;
                        return v(), P("div", {
                          role: "gridcell",
                          class: "dp__calendar_item",
                          ref_for: !0,
                          ref: (q) => U(q, u, V),
                          key: V + u,
                          "aria-selected": g.classData.dp__active_date || g.classData.dp__range_start || g.classData.dp__range_start,
                          "aria-disabled": g.classData.dp__cell_disabled,
                          "aria-label": (S = (m = o(T).ariaLabels) == null ? void 0 : m.day) == null ? void 0 : S.call(m, g),
                          tabindex: "0",
                          "data-test": g.value,
                          onClick: je((q) => i.$emit("select-date", g), ["stop", "prevent"]),
                          onKeydown: [
                            oe((q) => i.$emit("select-date", g), ["enter"]),
                            oe((q) => i.$emit("handle-space", g), ["space"])
                          ],
                          onMouseover: (q) => R(g, u, V),
                          onMouseleave: f
                        }, [
                          ne("div", {
                            class: he(["dp__cell_inner", g.classData])
                          }, [
                            i.$slots.day ? G(i.$slots, "day", {
                              key: 0,
                              day: +g.text,
                              date: g.value
                            }) : w("", !0),
                            i.$slots.day ? w("", !0) : (v(), P(de, { key: 1 }, [
                              Fe(Ae(g.text), 1)
                            ], 64)),
                            g.marker ? (v(), P("div", {
                              key: 2,
                              class: he(o($)(g.marker)),
                              style: it(g.marker.color ? { backgroundColor: g.marker.color } : {})
                            }, null, 6)) : w("", !0),
                            o(x)(g.value) ? (v(), P("div", {
                              key: 3,
                              class: "dp__marker_tooltip",
                              style: it(L.value)
                            }, [
                              (c = g.marker) != null && c.tooltip ? (v(), P("div", {
                                key: 0,
                                class: "dp__tooltip_content",
                                onClick: M[0] || (M[0] = je(() => {
                                }, ["stop"]))
                              }, [
                                (v(!0), P(de, null, ke(g.marker.tooltip, (q, se) => (v(), P("div", {
                                  key: se,
                                  class: "dp__tooltip_text"
                                }, [
                                  i.$slots["marker-tooltip"] ? G(i.$slots, "marker-tooltip", {
                                    key: 0,
                                    tooltop: q,
                                    day: g.value
                                  }) : w("", !0),
                                  i.$slots["marker-tooltip"] ? w("", !0) : (v(), P(de, { key: 1 }, [
                                    ne("div", {
                                      class: "dp__tooltip_mark",
                                      style: it(q.color ? { backgroundColor: q.color } : {})
                                    }, null, 4),
                                    ne("div", null, Ae(q.text), 1)
                                  ], 64))
                                ]))), 128)),
                                cl
                              ])) : w("", !0)
                            ], 4)) : w("", !0)
                          ], 2)
                        ], 40, dl);
                      }), 128))
                    ]))), 128))
                  ], 8, sl)) : w("", !0)
                ];
              }),
              _: 3
            }, 8, ["name", "css"])
          ], 10, al))
        ], 4)
      ], 2);
    };
  }
}), ml = ["aria-label", "aria-disabled"], zt = /* @__PURE__ */ Ee({
  __name: "ActionIcon",
  props: {
    ariaLabel: { type: String, default: "" },
    disabled: { type: Boolean, default: !1 }
  },
  emits: ["activate", "set-ref"],
  setup(e, { emit: a }) {
    const l = W(null);
    return Le(() => a("set-ref", l)), (t, h) => (v(), P("div", {
      class: "dp__month_year_col_nav",
      onClick: h[0] || (h[0] = (b) => t.$emit("activate")),
      onKeydown: [
        h[1] || (h[1] = oe((b) => t.$emit("activate"), ["enter"])),
        h[2] || (h[2] = oe((b) => t.$emit("activate"), ["space"]))
      ],
      tabindex: "0",
      role: "button",
      "aria-label": e.ariaLabel,
      "aria-disabled": e.disabled,
      ref_key: "elRef",
      ref: l
    }, [
      ne("div", {
        class: he(["dp__inner_nav", { dp__inner_nav_disabled: e.disabled }])
      }, [
        G(t.$slots, "default")
      ], 2)
    ], 40, ml));
  }
}), vl = ["onKeydown"], yl = { class: "dp__selection_grid_header" }, hl = ["aria-selected", "aria-disabled", "data-test", "onClick", "onKeydown", "onMouseover"], gl = ["aria-label", "onKeydown"], gt = /* @__PURE__ */ Ee({
  __name: "SelectionGrid",
  props: {
    items: { type: Array, default: () => [] },
    modelValue: { type: [String, Number], default: null },
    multiModelValue: { type: Array, default: () => [] },
    disabledValues: { type: Array, default: () => [] },
    minValue: { type: [Number, String], default: null },
    maxValue: { type: [Number, String], default: null },
    year: { type: Number, default: 0 },
    skipActive: { type: Boolean, default: !1 },
    headerRefs: { type: Array, default: () => [] },
    skipButtonRef: { type: Boolean, default: !1 },
    monthPicker: { type: Boolean, default: !1 },
    yearPicker: { type: Boolean, default: !1 },
    escClose: { type: Boolean, default: !0 },
    type: { type: String, default: null },
    arrowNavigation: { type: Boolean, default: !1 },
    autoApply: { type: Boolean, default: !1 },
    textInput: { type: Boolean, default: !1 },
    ariaLabels: { type: Object, default: () => ({}) },
    hideNavigation: { type: Array, default: () => [] }
  },
  emits: ["update:model-value", "selected", "toggle", "reset-flow"],
  setup(e, { expose: a, emit: l }) {
    const t = e, { setSelectionGrid: h, buildMultiLevelMatrix: b, setMonthPicker: T } = Xe(), { hideNavigationButtons: A } = Oe(t), L = W(!1), E = W(null), Y = W(null), s = W([]), D = W(), N = W();
    _n(() => {
      E.value = null;
    }), Le(() => {
      bt().then(() => f()), X(), I(!0);
    }), xt(() => I(!1));
    const I = (i) => {
      var M;
      t.arrowNavigation && ((M = t.headerRefs) != null && M.length ? T(i) : h(i));
    }, X = () => {
      const i = Se(Y);
      i && (t.textInput || i.focus({ preventScroll: !0 }), L.value = i.clientHeight < i.scrollHeight);
    }, ae = F(
      () => ({
        dp__overlay: !0
      })
    ), C = F(() => ({
      dp__overlay_col: !0
    })), $ = (i) => t.skipActive ? !1 : i.value === t.modelValue, x = F(() => t.items.map((i) => i.filter((M) => M).map((M) => {
      var n, u, g;
      const _ = t.disabledValues.some((V) => V === M.value) || R(M.value), K = (n = t.multiModelValue) != null && n.length ? (u = t.multiModelValue) == null ? void 0 : u.some(
        (V) => me(
          V,
          lt(
            t.monthPicker ? Ct(new Date(), M.value) : new Date(),
            t.monthPicker ? t.year : M.value
          )
        )
      ) : $(M);
      return {
        ...M,
        className: {
          dp__overlay_cell_active: K,
          dp__overlay_cell: !K,
          dp__overlay_cell_disabled: _,
          dp__overlay_cell_active_disabled: _ && K,
          dp__overlay_cell_pad: !0,
          dp__cell_in_between: (g = t.multiModelValue) != null && g.length ? j(M.value) : !1
        }
      };
    }))), J = F(
      () => ({
        dp__button: !0,
        dp__overlay_action: !0,
        dp__over_action_scroll: L.value,
        dp__button_bottom: t.autoApply
      })
    ), Q = F(() => {
      var i, M;
      return {
        dp__overlay_container: !0,
        dp__container_flex: ((i = t.items) == null ? void 0 : i.length) <= 6,
        dp__container_block: ((M = t.items) == null ? void 0 : M.length) > 6
      };
    }), R = (i) => {
      const M = t.maxValue || t.maxValue === 0, _ = t.minValue || t.minValue === 0;
      return !M && !_ ? !1 : M && _ ? +i > +t.maxValue || +i < +t.minValue : M ? +i > +t.maxValue : _ ? +i < +t.minValue : !1;
    }, f = () => {
      const i = Se(E);
      if (i) {
        const M = Se(Y);
        M && (M.scrollTop = i.offsetTop - M.offsetTop - (M.getBoundingClientRect().height / 2 - i.getBoundingClientRect().height));
      }
    }, O = (i) => {
      !t.disabledValues.some((M) => M === i) && !R(i) && (l("update:model-value", i), l("selected"));
    }, j = (i) => {
      const M = t.monthPicker ? t.year : i;
      return kn(
        t.multiModelValue,
        lt(
          t.monthPicker ? Ct(new Date(), D.value || 0) : new Date(),
          t.monthPicker ? M : D.value || M
        ),
        lt(t.monthPicker ? Ct(new Date(), i) : new Date(), M)
      );
    }, le = () => {
      l("toggle"), l("reset-flow");
    }, B = () => {
      t.escClose && le();
    }, U = (i, M, _, K) => {
      i && (M.value === +t.modelValue && !t.disabledValues.includes(M.value) && (E.value = i), t.arrowNavigation && (Array.isArray(s.value[_]) ? s.value[_][K] = i : s.value[_] = [i], y()));
    }, y = () => {
      var M, _;
      const i = (M = t.headerRefs) != null && M.length ? [t.headerRefs].concat(s.value) : s.value.concat([t.skipButtonRef ? [] : [N.value]]);
      b(we(i), (_ = t.headerRefs) != null && _.length ? "monthPicker" : "selectionGrid");
    };
    return a({ focusGrid: X }), (i, M) => {
      var _;
      return v(), P("div", {
        ref_key: "gridWrapRef",
        ref: Y,
        class: he(o(ae)),
        role: "dialog",
        tabindex: "0",
        onKeydown: oe(B, ["esc"])
      }, [
        ne("div", {
          class: he(o(Q)),
          role: "grid"
        }, [
          ne("div", yl, [
            G(i.$slots, "header")
          ]),
          (v(!0), P(de, null, ke(o(x), (K, n) => (v(), P("div", {
            class: "dp__overlay_row",
            key: n,
            role: "row"
          }, [
            (v(!0), P(de, null, ke(K, (u, g) => (v(), P("div", {
              role: "gridcell",
              class: he(o(C)),
              key: u.value,
              "aria-selected": u.value === e.modelValue && !e.disabledValues.includes(u.value),
              "aria-disabled": u.className.dp__overlay_cell_disabled,
              ref_for: !0,
              ref: (V) => U(V, u, n, g),
              tabindex: "0",
              "data-test": u.text,
              onClick: (V) => O(u.value),
              onKeydown: [
                oe((V) => O(u.value), ["enter"]),
                oe((V) => O(u.value), ["space"])
              ],
              onMouseover: (V) => D.value = u.value
            }, [
              ne("div", {
                class: he(u.className)
              }, [
                i.$slots.item ? G(i.$slots, "item", {
                  key: 0,
                  item: u
                }) : w("", !0),
                i.$slots.item ? w("", !0) : (v(), P(de, { key: 1 }, [
                  Fe(Ae(u.text), 1)
                ], 64))
              ], 2)
            ], 42, hl))), 128))
          ]))), 128)),
          i.$slots["button-icon"] ? Mt((v(), P("div", {
            key: 0,
            role: "button",
            "aria-label": (_ = e.ariaLabels) == null ? void 0 : _.toggleOverlay,
            class: he(o(J)),
            tabindex: "0",
            ref_key: "toggleButton",
            ref: N,
            onClick: le,
            onKeydown: oe(le, ["enter"])
          }, [
            G(i.$slots, "button-icon")
          ], 42, gl)), [
            [At, !o(A)(e.type)]
          ]) : w("", !0)
        ], 2)
      ], 42, vl);
    };
  }
}), pl = ["aria-label"], dn = /* @__PURE__ */ Ee({
  __name: "RegularPicker",
  props: {
    ariaLabel: { type: String, default: "" },
    showSelectionGrid: { type: Boolean, default: !1 },
    modelValue: { type: Number, default: null },
    items: { type: Array, default: () => [] },
    disabledValues: { type: Array, default: () => [] },
    minValue: { type: Number, default: null },
    maxValue: { type: Number, default: null },
    slotName: { type: String, default: "" },
    headerRefs: { type: Array, default: () => [] },
    escClose: { type: Boolean, default: !0 },
    type: { type: String, default: null },
    transitions: { type: [Object, Boolean], default: !1 },
    arrowNavigation: { type: Boolean, default: !1 },
    autoApply: { type: Boolean, default: !1 },
    textInput: { type: Boolean, default: !1 },
    ariaLabels: { type: Object, default: () => ({}) },
    hideNavigation: { type: Array, default: () => [] }
  },
  emits: ["update:model-value", "toggle", "set-ref"],
  setup(e, { emit: a }) {
    const l = e, { transitionName: t, showTransition: h } = Nt(l.transitions), b = W(null);
    return Le(() => a("set-ref", b)), (T, A) => (v(), P(de, null, [
      ne("div", {
        class: "dp__month_year_select",
        onClick: A[0] || (A[0] = (L) => T.$emit("toggle")),
        onKeydown: [
          A[1] || (A[1] = oe((L) => T.$emit("toggle"), ["enter"])),
          A[2] || (A[2] = oe((L) => T.$emit("toggle"), ["space"]))
        ],
        role: "button",
        "aria-label": e.ariaLabel,
        tabindex: "0",
        ref_key: "elRef",
        ref: b
      }, [
        G(T.$slots, "default")
      ], 40, pl),
      xe(ct, {
        name: o(t)(e.showSelectionGrid),
        css: o(h)
      }, {
        default: ue(() => [
          e.showSelectionGrid ? (v(), ce(gt, Me({ key: 0 }, {
            modelValue: e.modelValue,
            items: e.items,
            disabledValues: e.disabledValues,
            minValue: e.minValue,
            maxValue: e.maxValue,
            escClose: e.escClose,
            type: e.type,
            arrowNavigation: e.arrowNavigation,
            textInput: e.textInput,
            autoApply: e.autoApply,
            ariaLabels: e.ariaLabels,
            hideNavigation: e.hideNavigation
          }, {
            "header-refs": [],
            "onUpdate:modelValue": A[3] || (A[3] = (L) => T.$emit("update:model-value", L)),
            onToggle: A[4] || (A[4] = (L) => T.$emit("toggle"))
          }), Ne({
            "button-icon": ue(() => [
              T.$slots["calendar-icon"] ? G(T.$slots, "calendar-icon", { key: 0 }) : w("", !0),
              T.$slots["calendar-icon"] ? w("", !0) : (v(), ce(o(Bt), { key: 1 }))
            ]),
            _: 2
          }, [
            T.$slots[e.slotName] ? {
              name: "item",
              fn: ue(({ item: L }) => [
                G(T.$slots, e.slotName, { item: L })
              ]),
              key: "0"
            } : void 0
          ]), 1040)) : w("", !0)
        ]),
        _: 3
      }, 8, ["name", "css"])
    ], 64));
  }
}), kl = { class: "dp__month_year_row" }, bl = { class: "dp__month_year_wrap" }, wl = { class: "dp__month_picker_header" }, $l = ["aria-label"], Dl = ["aria-label"], _l = ["aria-label"], Ml = /* @__PURE__ */ Ee({
  __name: "MonthYearPicker",
  props: {
    month: { type: Number, default: 0 },
    year: { type: Number, default: 0 },
    instance: { type: Number, default: 0 },
    years: { type: Array, default: () => [] },
    months: { type: Array, default: () => [] },
    internalModelValue: { type: [Date, Array], default: null },
    ...Ze
  },
  emits: ["update-month-year", "month-year-select", "mount", "reset-flow", "overlay-closed"],
  setup(e, { expose: a, emit: l }) {
    const t = e, { defaults: h } = Oe(t), { transitionName: b, showTransition: T } = Nt(h.value.transitions), { buildMatrix: A } = Xe(), { handleMonthYearChange: L, isDisabled: E, updateMonthYear: Y } = Ka(t, l), s = W(!1), D = W(!1), N = W([null, null, null, null]), I = W(null), X = W(null), ae = W(null);
    Le(() => {
      l("mount");
    });
    const C = (m) => ({
      get: () => t[m],
      set: (S) => {
        const c = m === "month" ? "year" : "month";
        l("update-month-year", { [m]: S, [c]: t[c] }), l("month-year-select", m === "year"), m === "month" ? K(!0) : n(!0);
      }
    }), $ = F(C("month")), x = F(C("year")), J = F(() => (m) => {
      const S = m === "month";
      return {
        showSelectionGrid: (S ? s : D).value,
        items: (S ? y : i).value,
        disabledValues: h.value.filters[S ? "months" : "years"],
        minValue: (S ? f : Q).value,
        maxValue: (S ? O : R).value,
        headerRefs: S && t.monthPicker ? [I.value, X.value, ae.value] : [],
        escClose: t.escClose,
        transitions: h.value.transitions,
        ariaLabels: h.value.ariaLabels,
        textInput: t.textInput,
        autoApply: t.autoApply,
        arrowNavigation: t.arrowNavigation,
        hideNavigation: t.hideNavigation
      };
    }), Q = F(() => t.minDate ? ye(p(t.minDate)) : null), R = F(() => t.maxDate ? ye(p(t.maxDate)) : null), f = F(() => {
      if (t.minDate && Q.value) {
        if (Q.value > t.year)
          return 12;
        if (Q.value === t.year)
          return ve(p(t.minDate));
      }
      return null;
    }), O = F(() => t.maxDate && R.value ? R.value < t.year ? -1 : R.value === t.year ? ve(p(t.maxDate)) : null : null), j = F(() => t.range && t.internalModelValue && (t.monthPicker || t.yearPicker) ? t.internalModelValue : []), le = (m) => m.reverse(), B = (m, S = !1) => {
      const c = [], q = (se) => S ? le(se) : se;
      for (let se = 0; se < m.length; se += 3) {
        const ge = [m[se], m[se + 1], m[se + 2]];
        c.push(q(ge));
      }
      return S ? c.reverse() : c;
    }, U = F(() => {
      const m = t.months.find((S) => S.value === t.month);
      return m || { text: "", value: 0 };
    }), y = F(() => B(t.months)), i = F(() => B(t.years, t.reverseYears)), M = F(() => h.value.multiCalendars ? t.multiCalendarsSolo ? !0 : t.instance === 0 : !0), _ = F(() => h.value.multiCalendars ? t.multiCalendarsSolo ? !0 : t.instance === h.value.multiCalendars - 1 : !0), K = (m = !1) => {
      u(m), s.value = !s.value, s.value || l("overlay-closed");
    }, n = (m = !1) => {
      u(m), D.value = !D.value, D.value || l("overlay-closed");
    }, u = (m) => {
      m || l("reset-flow");
    }, g = (m = !1) => {
      l("update-month-year", {
        year: m ? t.year + 1 : t.year - 1,
        month: t.month,
        fromNav: !0
      });
    }, V = (m, S) => {
      t.arrowNavigation && (N.value[S] = Se(m), A(N.value, "monthYear"));
    };
    return a({
      toggleMonthPicker: K,
      toggleYearPicker: n
    }), (m, S) => {
      var c, q, se, ge, Pe;
      return v(), P("div", kl, [
        m.$slots["month-year"] ? G(m.$slots, "month-year", Ye(Me({ key: 0 }, { month: e.month, year: e.year, months: e.months, years: e.years, updateMonthYear: o(Y), handleMonthYearChange: o(L), instance: e.instance }))) : (v(), P(de, { key: 1 }, [
          !m.monthPicker && !m.yearPicker ? (v(), P(de, { key: 0 }, [
            o(M) && !m.vertical ? (v(), ce(zt, {
              key: 0,
              "aria-label": (c = o(h).ariaLabels) == null ? void 0 : c.prevMonth,
              disabled: o(E)(!1),
              onActivate: S[0] || (S[0] = (ee) => o(L)(!1)),
              onSetRef: S[1] || (S[1] = (ee) => V(ee, 0))
            }, {
              default: ue(() => [
                m.$slots["arrow-left"] ? G(m.$slots, "arrow-left", { key: 0 }) : w("", !0),
                m.$slots["arrow-left"] ? w("", !0) : (v(), ce(o(an), { key: 1 }))
              ]),
              _: 3
            }, 8, ["aria-label", "disabled"])) : w("", !0),
            ne("div", bl, [
              xe(dn, Me({
                type: "month",
                "slot-name": "month-overlay",
                "aria-label": (q = o(h).ariaLabels) == null ? void 0 : q.openMonthsOverlay,
                modelValue: o($),
                "onUpdate:modelValue": S[2] || (S[2] = (ee) => et($) ? $.value = ee : null)
              }, o(J)("month"), {
                onToggle: K,
                onSetRef: S[3] || (S[3] = (ee) => V(ee, 1))
              }), Ne({
                default: ue(() => [
                  m.$slots.month ? G(m.$slots, "month", Ye(Me({ key: 0 }, o(U)))) : w("", !0),
                  m.$slots.month ? w("", !0) : (v(), P(de, { key: 1 }, [
                    Fe(Ae(o(U).text), 1)
                  ], 64))
                ]),
                _: 2
              }, [
                m.$slots["calendar-icon"] ? {
                  name: "calendar-icon",
                  fn: ue(() => [
                    G(m.$slots, "calendar-icon")
                  ]),
                  key: "0"
                } : void 0,
                m.$slots["month-overlay-value"] ? {
                  name: "month-overlay",
                  fn: ue(({ item: ee }) => [
                    G(m.$slots, "month-overlay-value", {
                      text: ee.text,
                      value: ee.value
                    })
                  ]),
                  key: "1"
                } : void 0
              ]), 1040, ["aria-label", "modelValue"]),
              xe(dn, Me({
                type: "year",
                "slot-name": "year-overlay",
                "aria-label": (se = o(h).ariaLabels) == null ? void 0 : se.openYearsOverlay,
                modelValue: o(x),
                "onUpdate:modelValue": S[4] || (S[4] = (ee) => et(x) ? x.value = ee : null)
              }, o(J)("year"), {
                onToggle: n,
                onSetRef: S[5] || (S[5] = (ee) => V(ee, 2))
              }), Ne({
                default: ue(() => [
                  m.$slots.year ? G(m.$slots, "year", {
                    key: 0,
                    year: e.year
                  }) : w("", !0),
                  m.$slots.year ? w("", !0) : (v(), P(de, { key: 1 }, [
                    Fe(Ae(e.year), 1)
                  ], 64))
                ]),
                _: 2
              }, [
                m.$slots["calendar-icon"] ? {
                  name: "calendar-icon",
                  fn: ue(() => [
                    G(m.$slots, "calendar-icon")
                  ]),
                  key: "0"
                } : void 0,
                m.$slots["year-overlay-value"] ? {
                  name: "year-overlay",
                  fn: ue(({ item: ee }) => [
                    G(m.$slots, "year-overlay-value", {
                      text: ee.text,
                      value: ee.value
                    })
                  ]),
                  key: "1"
                } : void 0
              ]), 1040, ["aria-label", "modelValue"])
            ]),
            o(M) && m.vertical ? (v(), ce(zt, {
              key: 1,
              "aria-label": (ge = o(h).ariaLabels) == null ? void 0 : ge.prevMonth,
              disabled: o(E)(!1),
              onActivate: S[6] || (S[6] = (ee) => o(L)(!1))
            }, {
              default: ue(() => [
                m.$slots["arrow-up"] ? G(m.$slots, "arrow-up", { key: 0 }) : w("", !0),
                m.$slots["arrow-up"] ? w("", !0) : (v(), ce(o(gn), { key: 1 }))
              ]),
              _: 3
            }, 8, ["aria-label", "disabled"])) : w("", !0),
            o(_) ? (v(), ce(zt, {
              key: 2,
              ref: "rightIcon",
              disabled: o(E)(!0),
              "aria-label": (Pe = o(h).ariaLabels) == null ? void 0 : Pe.nextMonth,
              onActivate: S[7] || (S[7] = (ee) => o(L)(!0)),
              onSetRef: S[8] || (S[8] = (ee) => V(ee, 3))
            }, {
              default: ue(() => [
                m.$slots[m.vertical ? "arrow-down" : "arrow-right"] ? G(m.$slots, m.vertical ? "arrow-down" : "arrow-right", { key: 0 }) : w("", !0),
                m.$slots[m.vertical ? "arrow-down" : "arrow-right"] ? w("", !0) : (v(), ce(St(m.vertical ? o(pn) : o(ln)), { key: 1 }))
              ]),
              _: 3
            }, 8, ["disabled", "aria-label"])) : w("", !0)
          ], 64)) : w("", !0),
          m.monthPicker ? (v(), ce(gt, Me({ key: 1 }, o(J)("month"), {
            "skip-active": m.range,
            year: e.year,
            "multi-model-value": o(j),
            "month-picker": "",
            modelValue: o($),
            "onUpdate:modelValue": S[17] || (S[17] = (ee) => et($) ? $.value = ee : null),
            onToggle: K,
            onSelected: S[18] || (S[18] = (ee) => m.$emit("overlay-closed"))
          }), Ne({
            header: ue(() => {
              var ee, He, Ge;
              return [
                ne("div", wl, [
                  ne("div", {
                    class: "dp__month_year_col_nav",
                    tabindex: "0",
                    ref_key: "mpPrevIconRef",
                    ref: I,
                    onClick: S[9] || (S[9] = (te) => g(!1)),
                    onKeydown: S[10] || (S[10] = oe((te) => g(!1), ["enter"]))
                  }, [
                    ne("div", {
                      class: "dp__inner_nav",
                      role: "button",
                      "aria-label": (ee = o(h).ariaLabels) == null ? void 0 : ee.prevMonth
                    }, [
                      m.$slots["arrow-left"] ? G(m.$slots, "arrow-left", { key: 0 }) : w("", !0),
                      m.$slots["arrow-left"] ? w("", !0) : (v(), ce(o(an), { key: 1 }))
                    ], 8, $l)
                  ], 544),
                  ne("div", {
                    class: "dp__pointer",
                    role: "button",
                    ref_key: "mpYearButtonRef",
                    ref: X,
                    "aria-label": (He = o(h).ariaLabels) == null ? void 0 : He.openYearsOverlay,
                    tabindex: "0",
                    onClick: S[11] || (S[11] = () => n(!1)),
                    onKeydown: S[12] || (S[12] = oe(() => n(!1), ["enter"]))
                  }, [
                    m.$slots.year ? G(m.$slots, "year", {
                      key: 0,
                      year: e.year
                    }) : w("", !0),
                    m.$slots.year ? w("", !0) : (v(), P(de, { key: 1 }, [
                      Fe(Ae(e.year), 1)
                    ], 64))
                  ], 40, Dl),
                  ne("div", {
                    class: "dp__month_year_col_nav",
                    tabindex: "0",
                    ref_key: "mpNextIconRef",
                    ref: ae,
                    onClick: S[13] || (S[13] = (te) => g(!0)),
                    onKeydown: S[14] || (S[14] = oe((te) => g(!0), ["enter"]))
                  }, [
                    ne("div", {
                      class: "dp__inner_nav",
                      role: "button",
                      "aria-label": (Ge = o(h).ariaLabels) == null ? void 0 : Ge.nextMonth
                    }, [
                      m.$slots["arrow-right"] ? G(m.$slots, "arrow-right", { key: 0 }) : w("", !0),
                      m.$slots["arrow-right"] ? w("", !0) : (v(), ce(o(ln), { key: 1 }))
                    ], 8, _l)
                  ], 544)
                ]),
                xe(ct, {
                  name: o(b)(D.value),
                  css: o(T)
                }, {
                  default: ue(() => [
                    D.value ? (v(), ce(gt, Me({ key: 0 }, o(J)("year"), {
                      modelValue: o(x),
                      "onUpdate:modelValue": S[15] || (S[15] = (te) => et(x) ? x.value = te : null),
                      onToggle: n,
                      onSelected: S[16] || (S[16] = (te) => m.$emit("overlay-closed"))
                    }), Ne({
                      "button-icon": ue(() => [
                        m.$slots["calendar-icon"] ? G(m.$slots, "calendar-icon", { key: 0 }) : w("", !0),
                        m.$slots["calendar-icon"] ? w("", !0) : (v(), ce(o(Bt), { key: 1 }))
                      ]),
                      _: 2
                    }, [
                      m.$slots["year-overlay-value"] ? {
                        name: "item",
                        fn: ue(({ item: te }) => [
                          G(m.$slots, "year-overlay-value", {
                            text: te.text,
                            value: te.value
                          })
                        ]),
                        key: "0"
                      } : void 0
                    ]), 1040, ["modelValue"])) : w("", !0)
                  ]),
                  _: 3
                }, 8, ["name", "css"])
              ];
            }),
            _: 2
          }, [
            m.$slots["month-overlay-value"] ? {
              name: "item",
              fn: ue(({ item: ee }) => [
                G(m.$slots, "month-overlay-value", {
                  text: ee.text,
                  value: ee.value
                })
              ]),
              key: "0"
            } : void 0
          ]), 1040, ["skip-active", "year", "multi-model-value", "modelValue"])) : w("", !0),
          m.yearPicker ? (v(), ce(gt, Me({ key: 2 }, o(J)("year"), {
            modelValue: o(x),
            "onUpdate:modelValue": S[19] || (S[19] = (ee) => et(x) ? x.value = ee : null),
            "multi-model-value": o(j),
            "skip-active": m.range,
            "skip-button-ref": "",
            "year-picker": "",
            onToggle: n,
            onSelected: S[20] || (S[20] = (ee) => m.$emit("overlay-closed"))
          }), Ne({ _: 2 }, [
            m.$slots["year-overlay-value"] ? {
              name: "item",
              fn: ue(({ item: ee }) => [
                G(m.$slots, "year-overlay-value", {
                  text: ee.text,
                  value: ee.value
                })
              ]),
              key: "0"
            } : void 0
          ]), 1040, ["modelValue", "multi-model-value", "skip-active"])) : w("", !0)
        ], 64))
      ]);
    };
  }
}), Al = {
  key: 0,
  class: "dp__time_input"
}, Sl = ["aria-label", "onKeydown", "onClick"], Pl = ["aria-label", "onKeydown", "onClick"], Cl = ["aria-label", "onKeydown", "onClick"], Tl = { key: 0 }, Rl = ["aria-label", "onKeydown"], Bl = /* @__PURE__ */ Ee({
  __name: "TimeInput",
  props: {
    hours: { type: Number, default: 0 },
    minutes: { type: Number, default: 0 },
    seconds: { type: Number, default: 0 },
    closeTimePickerBtn: { type: Object, default: null },
    order: { type: Number, default: 0 },
    ...Ze
  },
  emits: [
    "set-hours",
    "set-minutes",
    "update:hours",
    "update:minutes",
    "update:seconds",
    "reset-flow",
    "mounted",
    "overlay-closed"
  ],
  setup(e, { expose: a, emit: l }) {
    const t = e, { setTimePickerElements: h, setTimePickerBackRef: b } = Xe(), { defaults: T } = Oe(t), { transitionName: A, showTransition: L } = Nt(T.value.transitions), E = pt({
      hours: !1,
      minutes: !1,
      seconds: !1
    }), Y = W("AM"), s = W(null), D = W([]);
    Le(() => {
      l("mounted");
    });
    const N = (y, i) => yn(Re(p(), y), i), I = (y, i) => Vn(Re(p(), y), i), X = F(
      () => ({
        dp__time_col: !0,
        dp__time_col_reg: !t.enableSeconds && t.is24,
        dp__time_col_reg_with_button: !t.enableSeconds && !t.is24,
        dp__time_col_sec: t.enableSeconds && t.is24,
        dp__time_col_sec_with_button: t.enableSeconds && !t.is24
      })
    ), ae = F(() => {
      const y = [{ type: "hours" }, { type: "", separator: !0 }, { type: "minutes" }];
      return t.enableSeconds ? y.concat([{ type: "", separator: !0 }, { type: "seconds" }]) : y;
    }), C = F(() => ae.value.filter((y) => !y.separator)), $ = F(() => (y) => {
      if (y === "hours") {
        const i = O(t.hours);
        return { text: i < 10 ? `0${i}` : `${i}`, value: i };
      }
      return { text: t[y] < 10 ? `0${t[y]}` : `${t[y]}`, value: t[y] };
    }), x = (y) => {
      const i = t.is24 ? 24 : 12, M = y === "hours" ? i : 60, _ = +t[`${y}GridIncrement`], K = y === "hours" && !t.is24 ? _ : 0, n = [];
      for (let u = K; u < M; u += _)
        n.push({ value: u, text: u < 10 ? `0${u}` : `${u}` });
      return y === "hours" && !t.is24 && n.push({ value: 0, text: "12" }), Sa(n);
    }, J = (y) => t[`no${y[0].toUpperCase() + y.slice(1)}Overlay`], Q = (y) => {
      J(y) || (E[y] = !E[y], E[y] || l("overlay-closed"));
    }, R = (y) => y === "hours" ? Ke : y === "minutes" ? ze : dt, f = (y, i = !0) => {
      const M = i ? N : I;
      l(
        `update:${y}`,
        R(y)(M({ [y]: +t[y] }, { [y]: +t[`${y}Increment`] }))
      );
    }, O = (y) => t.is24 ? y : (y >= 12 ? Y.value = "PM" : Y.value = "AM", Ra(y)), j = () => {
      Y.value === "PM" ? (Y.value = "AM", l("update:hours", t.hours - 12)) : (Y.value = "PM", l("update:hours", t.hours + 12));
    }, le = (y) => {
      E[y] = !0;
    }, B = (y, i, M) => {
      if (y && t.arrowNavigation) {
        Array.isArray(D.value[i]) ? D.value[i][M] = y : D.value[i] = [y];
        const _ = D.value.reduce(
          (K, n) => n.map((u, g) => [...K[g] || [], n[g]]),
          []
        );
        b(t.closeTimePickerBtn), s.value && (_[1] = _[1].concat(s.value)), h(_, t.order);
      }
    }, U = (y, i) => y === "hours" && !t.is24 ? l(`update:${y}`, Y.value === "PM" ? i + 12 : i) : l(`update:${y}`, i);
    return a({ openChildCmp: le }), (y, i) => {
      var M;
      return y.disabled ? w("", !0) : (v(), P("div", Al, [
        (v(!0), P(de, null, ke(o(ae), (_, K) => {
          var n, u, g;
          return v(), P("div", {
            key: K,
            class: he(o(X))
          }, [
            _.separator ? (v(), P(de, { key: 0 }, [
              Fe(" : ")
            ], 64)) : (v(), P(de, { key: 1 }, [
              ne("div", {
                class: "dp__inc_dec_button",
                role: "button",
                "aria-label": (n = o(T).ariaLabels) == null ? void 0 : n.incrementValue(_.type),
                tabindex: "0",
                onKeydown: [
                  oe((V) => f(_.type), ["enter"]),
                  oe((V) => f(_.type), ["space"])
                ],
                onClick: (V) => f(_.type),
                ref_for: !0,
                ref: (V) => B(V, K, 0)
              }, [
                y.$slots["arrow-up"] ? G(y.$slots, "arrow-up", { key: 0 }) : w("", !0),
                y.$slots["arrow-up"] ? w("", !0) : (v(), ce(o(gn), { key: 1 }))
              ], 40, Sl),
              ne("div", {
                role: "button",
                "aria-label": (u = o(T).ariaLabels) == null ? void 0 : u.openTpOverlay(_.type),
                class: he(J(_.type) ? "" : "dp__time_display"),
                tabindex: "0",
                onKeydown: [
                  oe((V) => Q(_.type), ["enter"]),
                  oe((V) => Q(_.type), ["space"])
                ],
                onClick: (V) => Q(_.type),
                ref_for: !0,
                ref: (V) => B(V, K, 1)
              }, [
                y.$slots[_.type] ? G(y.$slots, _.type, {
                  key: 0,
                  text: o($)(_.type).text,
                  value: o($)(_.type).value
                }) : w("", !0),
                y.$slots[_.type] ? w("", !0) : (v(), P(de, { key: 1 }, [
                  Fe(Ae(o($)(_.type).text), 1)
                ], 64))
              ], 42, Pl),
              ne("div", {
                class: "dp__inc_dec_button",
                role: "button",
                "aria-label": (g = o(T).ariaLabels) == null ? void 0 : g.decrementValue(_.type),
                tabindex: "0",
                onKeydown: [
                  oe((V) => f(_.type, !1), ["enter"]),
                  oe((V) => f(_.type, !1), ["space"])
                ],
                onClick: (V) => f(_.type, !1),
                ref_for: !0,
                ref: (V) => B(V, K, 2)
              }, [
                y.$slots["arrow-down"] ? G(y.$slots, "arrow-down", { key: 0 }) : w("", !0),
                y.$slots["arrow-down"] ? w("", !0) : (v(), ce(o(pn), { key: 1 }))
              ], 40, Cl)
            ], 64))
          ], 2);
        }), 128)),
        y.is24 ? w("", !0) : (v(), P("div", Tl, [
          y.$slots["am-pm-button"] ? G(y.$slots, "am-pm-button", {
            key: 0,
            toggle: j,
            value: Y.value
          }) : w("", !0),
          y.$slots["am-pm-button"] ? w("", !0) : (v(), P("button", {
            key: 1,
            ref_key: "amPmButton",
            ref: s,
            type: "button",
            class: "dp__pm_am_button",
            role: "button",
            "aria-label": (M = o(T).ariaLabels) == null ? void 0 : M.amPmButton,
            tabindex: "0",
            onClick: j,
            onKeydown: [
              oe(je(j, ["prevent"]), ["enter"]),
              oe(je(j, ["prevent"]), ["space"])
            ]
          }, Ae(Y.value), 41, Rl))
        ])),
        (v(!0), P(de, null, ke(o(C), (_, K) => (v(), ce(ct, {
          key: K,
          name: o(A)(E[_.type]),
          css: o(L)
        }, {
          default: ue(() => [
            E[_.type] ? (v(), ce(gt, {
              key: 0,
              items: x(_.type),
              "disabled-values": o(T).filters.times[_.type],
              "esc-close": y.escClose,
              "aria-labels": o(T).ariaLabels,
              "hide-navigation": y.hideNavigation,
              "onUpdate:modelValue": (n) => U(_.type, n),
              onSelected: (n) => Q(_.type),
              onToggle: (n) => Q(_.type),
              onResetFlow: i[0] || (i[0] = (n) => y.$emit("reset-flow")),
              type: _.type
            }, Ne({
              "button-icon": ue(() => [
                y.$slots["clock-icon"] ? G(y.$slots, "clock-icon", { key: 0 }) : w("", !0),
                y.$slots["clock-icon"] ? w("", !0) : (v(), ce(o(hn), { key: 1 }))
              ]),
              _: 2
            }, [
              y.$slots[`${_.type}-overlay-value`] ? {
                name: "item",
                fn: ue(({ item: n }) => [
                  G(y.$slots, `${_.type}-overlay-value`, {
                    text: n.text,
                    value: n.value
                  })
                ]),
                key: "0"
              } : void 0
            ]), 1032, ["items", "disabled-values", "esc-close", "aria-labels", "hide-navigation", "onUpdate:modelValue", "onSelected", "onToggle", "type"])) : w("", !0)
          ]),
          _: 2
        }, 1032, ["name", "css"]))), 128))
      ]));
    };
  }
}), Nl = ["aria-label"], Ol = { class: "dp__overlay_container dp__container_flex" }, Il = {
  key: 1,
  class: "dp__overlay_row"
}, Vl = ["aria-label"], Yl = /* @__PURE__ */ Ee({
  __name: "TimePicker",
  props: {
    hours: { type: [Number, Array], default: 0 },
    minutes: { type: [Number, Array], default: 0 },
    seconds: { type: [Number, Array], default: 0 },
    internalModelValue: { type: [Date, Array], default: null },
    ...Ze
  },
  emits: [
    "update:hours",
    "update:minutes",
    "update:seconds",
    "mount",
    "reset-flow",
    "overlay-closed"
  ],
  setup(e, { expose: a, emit: l }) {
    const t = e, { buildMatrix: h, setTimePicker: b } = Xe(), T = Xt(), { hideNavigationButtons: A, defaults: L } = Oe(t), { transitionName: E, showTransition: Y } = Nt(L.value.transitions), s = W(null), D = W(null), N = W([]), I = W(null);
    Le(() => {
      l("mount"), !t.timePicker && t.arrowNavigation ? h([Se(s.value)], "time") : b(!0, t.timePicker);
    });
    const X = F(() => t.range && t.modelAuto ? wn(t.internalModelValue) : !0), ae = W(!1), C = (B) => ({
      hours: Array.isArray(t.hours) ? t.hours[B] : t.hours,
      minutes: Array.isArray(t.minutes) ? t.minutes[B] : t.minutes,
      seconds: Array.isArray(t.seconds) ? t.seconds[B] : t.seconds
    }), $ = F(() => {
      const B = [];
      if (t.range)
        for (let U = 0; U < 2; U++)
          B.push(C(U));
      else
        B.push(C(0));
      return B;
    }), x = (B, U = !1, y = "") => {
      U || l("reset-flow"), ae.value = B, t.arrowNavigation && (b(B), B || l("overlay-closed")), bt(() => {
        y !== "" && N.value[0] && N.value[0].openChildCmp(y);
      });
    }, J = F(() => ({
      dp__button: !0,
      dp__button_bottom: t.autoApply
    })), Q = at(T, "timePicker"), R = (B, U, y) => t.range ? U === 0 ? [B, $.value[1][y]] : [$.value[0][y], B] : B, f = (B) => {
      l("update:hours", B);
    }, O = (B) => {
      l("update:minutes", B);
    }, j = (B) => {
      l("update:seconds", B);
    }, le = () => {
      I.value && t.arrowNavigation && I.value.focus({ preventScroll: !0 });
    };
    return a({ toggleTimePicker: x }), (B, U) => {
      var y;
      return v(), P("div", null, [
        B.timePicker ? w("", !0) : Mt((v(), P("div", {
          key: 0,
          class: he(o(J)),
          role: "button",
          "aria-label": (y = o(L).ariaLabels) == null ? void 0 : y.openTimePicker,
          tabindex: "0",
          ref_key: "openTimePickerBtn",
          ref: s,
          onKeydown: [
            U[0] || (U[0] = oe((i) => x(!0), ["enter"])),
            U[1] || (U[1] = oe((i) => x(!0), ["space"]))
          ],
          onClick: U[2] || (U[2] = (i) => x(!0))
        }, [
          B.$slots["clock-icon"] ? G(B.$slots, "clock-icon", { key: 0 }) : w("", !0),
          B.$slots["clock-icon"] ? w("", !0) : (v(), ce(o(hn), { key: 1 }))
        ], 42, Nl)), [
          [At, !o(A)("time")]
        ]),
        xe(ct, {
          name: o(E)(ae.value),
          css: o(Y)
        }, {
          default: ue(() => {
            var i;
            return [
              ae.value || B.timePicker ? (v(), P("div", {
                key: 0,
                class: "dp__overlay",
                ref_key: "overlayRef",
                ref: I,
                tabindex: "0"
              }, [
                ne("div", Ol, [
                  B.$slots["time-picker-overlay"] ? G(B.$slots, "time-picker-overlay", {
                    key: 0,
                    hours: e.hours,
                    minutes: e.minutes,
                    seconds: e.seconds,
                    setHours: f,
                    setMinutes: O,
                    setSeconds: j
                  }) : w("", !0),
                  B.$slots["time-picker-overlay"] ? w("", !0) : (v(), P("div", Il, [
                    (v(!0), P(de, null, ke(o($), (M, _) => Mt((v(), ce(Bl, Me({ key: _ }, {
                      ...B.$props,
                      order: _,
                      hours: M.hours,
                      minutes: M.minutes,
                      seconds: M.seconds,
                      closeTimePickerBtn: D.value,
                      disabled: _ === 0 ? B.fixedStart : B.fixedEnd
                    }, {
                      ref_for: !0,
                      ref_key: "timeInputRefs",
                      ref: N,
                      "onUpdate:hours": (K) => f(R(K, _, "hours")),
                      "onUpdate:minutes": (K) => O(R(K, _, "minutes")),
                      "onUpdate:seconds": (K) => j(R(K, _, "seconds")),
                      onMounted: le,
                      onOverlayClosed: le
                    }), Ne({ _: 2 }, [
                      ke(o(Q), (K, n) => ({
                        name: K,
                        fn: ue((u) => [
                          G(B.$slots, K, Ye(tt(u)))
                        ])
                      }))
                    ]), 1040, ["onUpdate:hours", "onUpdate:minutes", "onUpdate:seconds"])), [
                      [At, _ === 0 ? !0 : o(X)]
                    ])), 128))
                  ])),
                  B.timePicker ? w("", !0) : Mt((v(), P("div", {
                    key: 2,
                    ref_key: "closeTimePickerBtn",
                    ref: D,
                    class: he(o(J)),
                    role: "button",
                    "aria-label": (i = o(L).ariaLabels) == null ? void 0 : i.closeTimePicker,
                    tabindex: "0",
                    onKeydown: [
                      U[3] || (U[3] = oe((M) => x(!1), ["enter"])),
                      U[4] || (U[4] = oe((M) => x(!1), ["space"]))
                    ],
                    onClick: U[5] || (U[5] = (M) => x(!1))
                  }, [
                    B.$slots["calendar-icon"] ? G(B.$slots, "calendar-icon", { key: 0 }) : w("", !0),
                    B.$slots["calendar-icon"] ? w("", !0) : (v(), ce(o(Bt), { key: 1 }))
                  ], 42, Vl)), [
                    [At, !o(A)("time")]
                  ])
                ])
              ], 512)) : w("", !0)
            ];
          }),
          _: 3
        }, 8, ["name", "css"])
      ]);
    };
  }
}), Ll = (e, a) => {
  const { isDisabled: l, matchDate: t, getWeekFromDate: h } = Oe(a), b = W(), T = W(p()), A = (n) => {
    !n.current && a.hideOffsetDates || (b.value = n.value);
  }, L = () => {
    b.value = null;
  }, E = (n) => Array.isArray(e.value) && a.range && e.value[0] && b.value ? n ? Be(b.value, e.value[0]) : Ce(b.value, e.value[0]) : !0, Y = (n, u) => {
    const g = () => e.value ? u ? e.value[0] || null : e.value[1] : null, V = e.value && Array.isArray(e.value) ? g() : null;
    return me(p(n.value), V);
  }, s = (n) => {
    const u = Array.isArray(e.value) ? e.value[0] : null;
    return n ? !Ce(b.value || null, u) : !0;
  }, D = (n, u = !0) => (a.range || a.weekPicker) && Array.isArray(e.value) ? a.hideOffsetDates && !n.current ? !1 : me(p(n.value), e.value[u ? 0 : 1]) : a.range ? Y(n, u) && s(u) || me(n.value, Array.isArray(e.value) ? e.value[0] : null) && E(u) : !1, N = (n, u, g) => Array.isArray(e.value) && e.value[0] && e.value.length === 1 ? n ? !1 : g ? Be(e.value[0], u.value) : Ce(e.value[0], u.value) : !1, I = (n) => !e.value || a.hideOffsetDates && !n.current ? !1 : a.range ? a.modelAuto && Array.isArray(e.value) ? me(n.value, e.value[0] ? e.value[0] : T.value) : !1 : a.multiDates && Array.isArray(e.value) ? e.value.some((u) => me(u, n.value)) : me(n.value, e.value ? e.value : T.value), X = (n) => {
    if (a.autoRange || a.weekPicker) {
      if (b.value) {
        if (a.hideOffsetDates && !n.current)
          return !1;
        const u = ut(b.value, +a.autoRange), g = h(p(b.value));
        return a.weekPicker ? me(g[1], p(n.value)) : me(u, p(n.value));
      }
      return !1;
    }
    return !1;
  }, ae = (n) => {
    if (a.autoRange || a.weekPicker) {
      if (b.value) {
        const u = ut(b.value, +a.autoRange);
        if (a.hideOffsetDates && !n.current)
          return !1;
        const g = h(p(b.value));
        return a.weekPicker ? Be(n.value, g[0]) && Ce(n.value, g[1]) : Be(n.value, b.value) && Ce(n.value, u);
      }
      return !1;
    }
    return !1;
  }, C = (n) => {
    if (a.autoRange || a.weekPicker) {
      if (b.value) {
        if (a.hideOffsetDates && !n.current)
          return !1;
        const u = h(p(b.value));
        return a.weekPicker ? me(u[0], n.value) : me(b.value, n.value);
      }
      return !1;
    }
    return !1;
  }, $ = (n) => kn(e.value, b.value, n.value), x = () => a.modelAuto && Array.isArray(a.internalModelValue) ? !!a.internalModelValue[0] : !1, J = () => a.modelAuto ? wn(a.internalModelValue) : !0, Q = (n) => {
    if (Array.isArray(e.value) && e.value.length || a.weekPicker)
      return !1;
    const u = a.range ? !D(n) && !D(n, !1) : !0;
    return !l(n.value) && !I(n) && !(!n.current && a.hideOffsetDates) && u;
  }, R = (n) => a.range ? a.modelAuto ? x() && I(n) : !1 : I(n), f = (n) => a.highlight ? t(n.value, a.highlight) : !1, O = (n) => l(n.value) && a.highlightDisabledDays === !1, j = (n) => a.highlightWeekDays && a.highlightWeekDays.includes(n.value.getDay()), le = (n) => (a.range || a.weekPicker) && (a.multiCalendars > 0 ? n.current : !0) && J() && !(!n.current && a.hideOffsetDates) && !I(n) ? $(n) : !1, B = (n) => ({
    dp__cell_offset: !n.current,
    dp__pointer: !a.disabled && !(!n.current && a.hideOffsetDates) && !l(n.value),
    dp__cell_disabled: l(n.value),
    dp__cell_highlight: !O(n) && (f(n) || j(n)) && !R(n),
    dp__cell_highlight_active: !O && (f(n) || j(n)) && R(n),
    dp__today: !a.noToday && me(n.value, T.value) && n.current
  }), U = (n) => ({
    dp__active_date: R(n),
    dp__date_hover: Q(n)
  }), y = (n) => ({
    ...i(n),
    ...M(n),
    dp__range_between_week: le(n) && a.weekPicker
  }), i = (n) => ({
    dp__range_start: a.multiCalendars > 0 ? n.current && D(n) && J() : D(n) && J(),
    dp__range_end: a.multiCalendars > 0 ? n.current && D(n, !1) && J() : D(n, !1) && J(),
    dp__range_between: le(n) && !a.weekPicker,
    dp__date_hover_start: N(Q(n), n, !0),
    dp__date_hover_end: N(Q(n), n, !1)
  }), M = (n) => ({
    ...i(n),
    dp__cell_auto_range: ae(n),
    dp__cell_auto_range_start: C(n),
    dp__cell_auto_range_end: X(n)
  }), _ = (n) => a.range ? a.autoRange ? M(n) : a.modelAuto ? { ...U(n), ...i(n) } : i(n) : a.weekPicker ? y(n) : U(n);
  return {
    setHoverDate: A,
    clearHoverDate: L,
    getDayClassData: (n) => ({
      ...B(n),
      ..._(n),
      [a.dayClass ? a.dayClass(n.value) : ""]: !0,
      [a.calendarCellClassName]: !!a.calendarCellClassName
    })
  };
}, El = ["id", "onKeydown"], Fl = {
  key: 0,
  class: "dp__sidebar_left"
}, Wl = {
  key: 1,
  class: "dp__preset_ranges"
}, Ul = ["onClick"], Kl = {
  key: 2,
  class: "dp__sidebar_right"
}, zl = {
  key: 3,
  class: "dp__now_wrap"
}, jl = /* @__PURE__ */ Ee({
  __name: "DatepickerMenu",
  props: {
    openOnTop: { type: Boolean, default: !1 },
    internalModelValue: { type: [Date, Array], default: null },
    ...Ze
  },
  emits: [
    "close-picker",
    "select-date",
    "auto-apply",
    "time-update",
    "flow-step",
    "update-month-year",
    "invalid-select",
    "update:internal-model-value"
  ],
  setup(e, { emit: a }) {
    const l = e, { setMenuFocused: t, setShiftKey: h, control: b } = bn(), { getCalendarDays: T, defaults: A } = Oe(l), L = Xt(), E = W(null), Y = pt({
      timePicker: !!(!l.enableTimePicker || l.timePicker || l.monthPicker),
      monthYearInput: !!l.timePicker,
      calendar: !1
    }), s = W([]), D = W([]), N = W(null), I = W(null), X = W(0), ae = W(!1), C = W(0);
    Le(() => {
      var H;
      ae.value = !0, !((H = l.presetRanges) != null && H.length) && !L["left-sidebar"] && !L["right-sidebar"] && qe();
      const d = Se(I);
      if (d && !l.textInput && !l.inline && (t(!0), f()), d) {
        const pe = (De) => {
          !l.monthYearComponent && !l.timePickerComponent && !Object.keys(L).length && De.preventDefault(), De.stopImmediatePropagation(), De.stopPropagation();
        };
        d.addEventListener("pointerdown", pe), d.addEventListener("mousedown", pe);
      }
      document.addEventListener("resize", qe);
    }), xt(() => {
      document.removeEventListener("resize", qe);
    });
    const { arrowRight: $, arrowLeft: x, arrowDown: J, arrowUp: Q } = Xe(), R = (d) => {
      d || d === 0 ? D.value[d].triggerTransition(
        B.value(d),
        U.value(d)
      ) : D.value.forEach(
        (H, pe) => H.triggerTransition(B.value(pe), U.value(pe))
      );
    }, f = () => {
      const d = Se(I);
      d && d.focus({ preventScroll: !0 });
    }, O = () => {
      var d;
      ((d = l.flow) == null ? void 0 : d.length) && C.value !== -1 && (C.value += 1, a("flow-step", C.value), k());
    }, j = () => {
      C.value = -1;
    }, {
      modelValue: le,
      month: B,
      year: U,
      time: y,
      updateTime: i,
      updateMonthYear: M,
      selectDate: _,
      getWeekNum: K,
      monthYearSelect: n,
      handleScroll: u,
      handleArrow: g,
      handleSwipe: V,
      getMarker: m,
      selectCurrentDate: S,
      presetDateRange: c
    } = Wa(l, a, O, R), { setHoverDate: q, clearHoverDate: se, getDayClassData: ge } = Ll(le, l), Pe = at(L, "calendar"), ee = at(L, "action"), He = at(L, "timePicker"), Ge = at(L, "monthYear"), te = F(() => l.openOnTop ? "dp__arrow_bottom" : "dp__arrow_top"), $e = F(() => Ca(l.yearRange)), be = F(() => Ta(l.locale, l.monthNameFormat)), qe = () => {
      const d = Se(E);
      d && (X.value = d.getBoundingClientRect().width);
    }, Ue = F(() => (d) => T(B.value(d), U.value(d))), Je = F(
      () => A.value.multiCalendars > 0 && l.range ? [...Array(A.value.multiCalendars).keys()] : [0]
    ), ft = F(
      () => (d) => d === 1
    ), Ot = F(() => l.monthPicker || l.timePicker || l.yearPicker), It = F(
      () => ({
        dp__flex_display: A.value.multiCalendars > 0
      })
    ), wt = F(() => ({
      dp__instance_calendar: A.value.multiCalendars > 0
    })), mt = F(() => ({
      dp__menu_disabled: l.disabled,
      dp__menu_readonly: l.readonly
    })), Vt = F(
      () => (d) => Lt(Ue, d)
    ), Yt = F(
      () => ({
        dp__menu: !0,
        dp__menu_index: !l.inline,
        dp__relative: l.inline,
        [l.menuClassName]: !!l.menuClassName
      })
    ), Lt = (d, H) => d.value(H).map((pe) => ({
      ...pe,
      days: pe.days.map((De) => (De.marker = m(De), De.classData = ge(De), De))
    })), $t = (d) => {
      d.stopPropagation(), d.preventDefault(), d.stopImmediatePropagation();
    }, Qt = () => {
      l.escClose && a("close-picker");
    }, en = (d, H = !1) => {
      _(d, H), l.spaceConfirm && a("select-date");
    }, Dt = (d) => {
      var H;
      (H = l.flow) != null && H.length && (Y[d] = !0, Object.keys(Y).filter((pe) => !Y[pe]).length || k());
    }, r = (d, H, pe, De, ...Ve) => {
      if (l.flow[C.value] === d) {
        const Z = De ? H.value[0] : H.value;
        Z && Z[pe](...Ve);
      }
    }, k = () => {
      r("month", s, "toggleMonthPicker", !0, !0), r("year", s, "toggleYearPicker", !0, !0), r("calendar", N, "toggleTimePicker", !1, !1, !0), r("time", N, "toggleTimePicker", !1, !0, !0);
      const d = l.flow[C.value];
      (d === "hours" || d === "minutes" || d === "seconds") && r(d, N, "toggleTimePicker", !1, !0, !0, d);
    }, z = (d) => {
      if (l.arrowNavigation) {
        if (d === "up")
          return Q();
        if (d === "down")
          return J();
        if (d === "left")
          return x();
        if (d === "right")
          return $();
      } else
        d === "left" || d === "up" ? g("left", 0, d === "up") : g("right", 0, d === "down");
    }, re = (d) => {
      h(d.shiftKey), !l.disableMonthYearSelect && d.code === "Tab" && d.target.classList.contains("dp__menu") && b.value.shiftKeyInMenu && (d.preventDefault(), d.stopImmediatePropagation(), a("close-picker"));
    };
    return (d, H) => {
      var pe;
      return v(), ce(ct, {
        appear: "",
        name: (pe = o(A).transitions) == null ? void 0 : pe.menuAppear,
        mode: "out-in",
        css: !!d.transitions
      }, {
        default: ue(() => {
          var De, Ve;
          return [
            ne("div", {
              id: d.uid ? `dp-menu-${d.uid}` : void 0,
              tabindex: "0",
              ref_key: "dpMenuRef",
              ref: I,
              role: "dialog",
              class: he(o(Yt)),
              onMouseleave: H[12] || (H[12] = (...Z) => o(se) && o(se)(...Z)),
              onClick: $t,
              onKeydown: [
                oe(Qt, ["esc"]),
                H[13] || (H[13] = oe(je((Z) => z("left"), ["prevent"]), ["left"])),
                H[14] || (H[14] = oe(je((Z) => z("up"), ["prevent"]), ["up"])),
                H[15] || (H[15] = oe(je((Z) => z("down"), ["prevent"]), ["down"])),
                H[16] || (H[16] = oe(je((Z) => z("right"), ["prevent"]), ["right"])),
                re
              ]
            }, [
              (d.disabled || d.readonly) && d.inline ? (v(), P("div", {
                key: 0,
                class: he(o(mt))
              }, null, 2)) : w("", !0),
              !d.inline && !d.teleportCenter ? (v(), P("div", {
                key: 1,
                class: he(o(te))
              }, null, 2)) : w("", !0),
              ne("div", {
                class: he({
                  dp__menu_content_wrapper: ((De = d.presetRanges) == null ? void 0 : De.length) || !!d.$slots["left-sidebar"] || !!d.$slots["right-sidebar"]
                })
              }, [
                d.$slots["left-sidebar"] ? (v(), P("div", Fl, [
                  G(d.$slots, "left-sidebar")
                ])) : w("", !0),
                (Ve = d.presetRanges) != null && Ve.length ? (v(), P("div", Wl, [
                  (v(!0), P(de, null, ke(d.presetRanges, (Z, ot) => (v(), P("div", {
                    key: ot,
                    style: it(Z.style || {}),
                    class: "dp__preset_range",
                    onClick: (ie) => o(c)(Z.range, !!Z.slot)
                  }, [
                    Z.slot ? G(d.$slots, Z.slot, {
                      key: 0,
                      presetDateRange: o(c),
                      label: Z.label,
                      range: Z.range
                    }) : (v(), P(de, { key: 1 }, [
                      Fe(Ae(Z.label), 1)
                    ], 64))
                  ], 12, Ul))), 128))
                ])) : w("", !0),
                ne("div", {
                  class: "dp__instance_calendar",
                  ref_key: "calendarWrapperRef",
                  ref: E,
                  role: "document"
                }, [
                  ne("div", {
                    class: he(o(It))
                  }, [
                    (v(!0), P(de, null, ke(o(Je), (Z, ot) => (v(), P("div", {
                      key: Z,
                      class: he(o(wt))
                    }, [
                      !d.disableMonthYearSelect && !d.timePicker ? (v(), ce(St(d.monthYearComponent ? d.monthYearComponent : Ml), Me({
                        key: 0,
                        ref_for: !0,
                        ref: (ie) => {
                          ie && (s.value[ot] = ie);
                        },
                        months: o(be),
                        years: o($e),
                        month: o(B)(Z),
                        year: o(U)(Z),
                        instance: Z,
                        "internal-model-value": e.internalModelValue
                      }, d.$props, {
                        onMount: H[0] || (H[0] = (ie) => Dt("monthYearInput")),
                        onResetFlow: j,
                        onUpdateMonthYear: (ie) => o(M)(Z, ie),
                        onMonthYearSelect: o(n),
                        onOverlayClosed: f
                      }), Ne({ _: 2 }, [
                        ke(o(Ge), (ie, Dn) => ({
                          name: ie,
                          fn: ue((Et) => [
                            G(d.$slots, ie, Ye(tt(Et)))
                          ])
                        }))
                      ]), 1040, ["months", "years", "month", "year", "instance", "internal-model-value", "onUpdateMonthYear", "onMonthYearSelect"])) : w("", !0),
                      xe(fl, Me({
                        ref_for: !0,
                        ref: (ie) => {
                          ie && (D.value[ot] = ie);
                        },
                        "specific-mode": o(Ot),
                        "get-week-num": o(K),
                        instance: Z,
                        "mapped-dates": o(Vt)(Z),
                        month: o(B)(Z),
                        year: o(U)(Z)
                      }, d.$props, {
                        "flow-step": C.value,
                        "onUpdate:flow-step": H[1] || (H[1] = (ie) => C.value = ie),
                        onSelectDate: (ie) => o(_)(ie, !o(ft)(Z)),
                        onHandleSpace: (ie) => en(ie, !o(ft)(Z)),
                        onSetHoverDate: H[2] || (H[2] = (ie) => o(q)(ie)),
                        onHandleScroll: (ie) => o(u)(ie, Z),
                        onHandleSwipe: (ie) => o(V)(ie, Z),
                        onMount: H[3] || (H[3] = (ie) => Dt("calendar")),
                        onResetFlow: j
                      }), Ne({ _: 2 }, [
                        ke(o(Pe), (ie, Dn) => ({
                          name: ie,
                          fn: ue((Et) => [
                            G(d.$slots, ie, Ye(tt({ ...Et })))
                          ])
                        }))
                      ]), 1040, ["specific-mode", "get-week-num", "instance", "mapped-dates", "month", "year", "flow-step", "onSelectDate", "onHandleSpace", "onHandleScroll", "onHandleSwipe"])
                    ], 2))), 128))
                  ], 2),
                  ne("div", null, [
                    d.$slots["time-picker"] ? G(d.$slots, "time-picker", Ye(Me({ key: 0 }, { time: o(y), updateTime: o(i) }))) : (v(), P(de, { key: 1 }, [
                      d.enableTimePicker && !d.monthPicker && !d.weekPicker ? (v(), ce(St(d.timePickerComponent ? d.timePickerComponent : Yl), Me({
                        key: 0,
                        ref_key: "timePickerRef",
                        ref: N,
                        hours: o(y).hours,
                        minutes: o(y).minutes,
                        seconds: o(y).seconds,
                        "internal-model-value": e.internalModelValue
                      }, d.$props, {
                        onMount: H[4] || (H[4] = (Z) => Dt("timePicker")),
                        "onUpdate:hours": H[5] || (H[5] = (Z) => o(i)(Z)),
                        "onUpdate:minutes": H[6] || (H[6] = (Z) => o(i)(Z, !1)),
                        "onUpdate:seconds": H[7] || (H[7] = (Z) => o(i)(Z, !1, !0)),
                        onResetFlow: j,
                        onOverlayClosed: f
                      }), Ne({ _: 2 }, [
                        ke(o(He), (Z, ot) => ({
                          name: Z,
                          fn: ue((ie) => [
                            G(d.$slots, Z, Ye(tt(ie)))
                          ])
                        }))
                      ]), 1040, ["hours", "minutes", "seconds", "internal-model-value"])) : w("", !0)
                    ], 64))
                  ])
                ], 512),
                d.$slots["right-sidebar"] ? (v(), P("div", Kl, [
                  G(d.$slots, "right-sidebar")
                ])) : w("", !0),
                d.showNowButton ? (v(), P("div", zl, [
                  d.$slots["now-button"] ? G(d.$slots, "now-button", {
                    key: 0,
                    selectCurrentDate: o(S)
                  }) : w("", !0),
                  d.$slots["now-button"] ? w("", !0) : (v(), P("button", {
                    key: 1,
                    type: "button",
                    role: "button",
                    class: "dp__now_button",
                    onClick: H[8] || (H[8] = (...Z) => o(S) && o(S)(...Z))
                  }, Ae(d.nowButtonLabel), 1))
                ])) : w("", !0)
              ], 2),
              d.$slots["action-row"] ? G(d.$slots, "action-row", Ye(Me({ key: 2 }, {
                internalModelValue: e.internalModelValue,
                selectDate: () => d.$emit("select-date"),
                closePicker: () => d.$emit("close-picker")
              }))) : (v(), P(de, { key: 3 }, [
                !d.autoApply || d.keepActionRow ? (v(), ce(St(d.actionRowComponent ? d.actionRowComponent : nl), Me({
                  key: 0,
                  "menu-mount": ae.value,
                  "calendar-width": X.value,
                  "internal-model-value": e.internalModelValue
                }, d.$props, {
                  onClosePicker: H[9] || (H[9] = (Z) => d.$emit("close-picker")),
                  onSelectDate: H[10] || (H[10] = (Z) => d.$emit("select-date")),
                  onInvalidSelect: H[11] || (H[11] = (Z) => d.$emit("invalid-select"))
                }), Ne({ _: 2 }, [
                  ke(o(ee), (Z, ot) => ({
                    name: Z,
                    fn: ue((ie) => [
                      G(d.$slots, Z, Ye(tt({ ...ie })))
                    ])
                  }))
                ]), 1040, ["menu-mount", "calendar-width", "internal-model-value"])) : w("", !0)
              ], 64))
            ], 42, El)
          ];
        }),
        _: 3
      }, 8, ["name", "css"]);
    };
  }
}), Hl = typeof window < "u" ? window : void 0, jt = () => {
}, Gl = (e) => Mn() ? (An(e), !0) : !1, xl = (e, a, l, t) => {
  if (!e)
    return jt;
  let h = jt;
  const b = kt(
    () => o(e),
    (A) => {
      h(), A && (A.addEventListener(a, l, t), h = () => {
        A.removeEventListener(a, l, t), h = jt;
      });
    },
    { immediate: !0, flush: "post" }
  ), T = () => {
    b(), h();
  };
  return Gl(T), T;
}, Xl = (e, a, l, t = {}) => {
  const { window: h = Hl, event: b = "pointerdown" } = t;
  return h ? xl(h, b, (A) => {
    const L = Se(e), E = Se(a);
    !L || !E || L === A.target || A.composedPath().includes(L) || A.composedPath().includes(E) || l(A);
  }, { passive: !0 }) : void 0;
}, Zl = /* @__PURE__ */ Ee({
  __name: "VueDatePicker",
  props: {
    ...Ze
  },
  emits: [
    "update:model-value",
    "text-submit",
    "closed",
    "cleared",
    "open",
    "focus",
    "blur",
    "internal-model-change",
    "recalculate-position",
    "flow-step",
    "update-month-year",
    "invalid-select"
  ],
  setup(e, { expose: a, emit: l }) {
    const t = e, h = Xt(), b = W(!1), T = Ht(t, "modelValue"), A = Ht(t, "timezone"), L = W(null), E = W(null), Y = W(!1), { setMenuFocused: s, setShiftKey: D } = bn(), { clearArrowNav: N } = Xe(), { validateDate: I, isValidTime: X, defaults: ae } = Oe(t);
    Le(() => {
      j(t.modelValue), t.inline || (window.addEventListener("scroll", M), window.addEventListener("resize", _)), t.inline && (b.value = !0);
    }), xt(() => {
      t.inline || (window.removeEventListener("scroll", M), window.removeEventListener("resize", _));
    });
    const C = at(h, "all", t.presetRanges), $ = at(h, "input");
    kt(
      [T, A],
      () => {
        j(T.value);
      },
      { deep: !0 }
    );
    const { openOnTop: x, menuPosition: J, setMenuPosition: Q, setInitialPosition: R } = za(
      L,
      E,
      l,
      t
    ), {
      inputValue: f,
      internalModelValue: O,
      parseExternalModelValue: j,
      emitModelValue: le,
      formatInputValue: B,
      checkBeforeEmit: U
    } = Ua(l, t, Y), y = F(
      () => ({
        dp__main: !0,
        dp__theme_dark: t.dark,
        dp__theme_light: !t.dark,
        dp__flex_display: t.inline,
        dp__flex_display_with_input: t.inlineWithInput
      })
    ), i = F(() => t.dark ? "dp__theme_dark" : "dp__theme_light"), M = () => {
      b.value && (t.closeOnScroll ? c() : t.autoPosition ? Q() : window.removeEventListener("scroll", M));
    }, _ = () => {
      b.value && Q();
    }, K = () => {
      !t.disabled && !t.readonly && (R(), b.value = !0, bt().then(() => {
        Q(), b.value && l("open");
      }), b.value || S(), j(t.modelValue));
    }, n = () => {
      f.value = "", S(), l("update:model-value", null), l("cleared"), c();
    }, u = () => {
      const te = O.value;
      return !te || !Array.isArray(te) && I(te) ? !0 : Array.isArray(te) ? te.length === 2 && I(te[0]) && I(te[1]) ? !0 : I(te[0]) : !1;
    }, g = () => {
      U() && u() ? (le(), c()) : l("invalid-select", O.value);
    }, V = (te) => {
      le(), t.closeOnAutoApply && !te && c();
    }, m = (te = !1) => {
      t.autoApply && X(O.value) && u() && (t.range && Array.isArray(O.value) ? (t.partialRange || O.value.length === 2) && V(te) : V(te));
    }, S = () => {
      t.textInput || (O.value = null);
    }, c = () => {
      t.inline || (b.value && (b.value = !1, s(!1), D(!1), N(), l("closed"), R(), f.value && j(T.value)), S(), E.value && E.value.focusInput());
    }, q = (te, $e) => {
      if (!te) {
        O.value = null;
        return;
      }
      O.value = te, $e && (g(), l("text-submit"));
    }, se = () => {
      t.autoApply && X(O.value) && le();
    }, ge = () => b.value ? c() : K(), Pe = (te) => {
      O.value = te;
    }, ee = F(() => t.textInput && ae.value.textInputOptions.format), He = () => {
      ee.value && (Y.value = !0, B()), l("focus");
    }, Ge = () => {
      ee.value && (Y.value = !1, B()), l("blur");
    };
    return Xl(
      L,
      E,
      t.onClickOutside ? () => t.onClickOutside(u) : c
    ), a({
      closeMenu: c,
      selectDate: g,
      clearValue: n,
      openMenu: K,
      onScroll: M,
      formatInputValue: B,
      updateInternalModelValue: Pe
    }), (te, $e) => (v(), P("div", {
      class: he(o(y))
    }, [
      xe(Ja, Me({
        ref_key: "inputRef",
        ref: E,
        "is-menu-open": b.value,
        "input-value": o(f),
        "onUpdate:input-value": $e[0] || ($e[0] = (be) => et(f) ? f.value = be : null)
      }, te.$props, {
        onClear: n,
        onOpen: K,
        onSetInputDate: q,
        onSetEmptyDate: o(le),
        onSelectDate: g,
        onToggle: ge,
        onClose: c,
        onFocus: He,
        onBlur: Ge
      }), Ne({ _: 2 }, [
        ke(o($), (be, qe) => ({
          name: be,
          fn: ue((Ue) => [
            G(te.$slots, be, Ye(tt(Ue)))
          ])
        }))
      ]), 1040, ["is-menu-open", "input-value", "onSetEmptyDate"]),
      b.value ? (v(), ce(Sn, {
        key: 0,
        to: te.teleport,
        disabled: te.inline
      }, [
        b.value ? (v(), ce(jl, Me({
          key: 0,
          ref_key: "dpMenuRef",
          ref: L,
          class: o(i),
          style: o(J),
          "open-on-top": o(x)
        }, te.$props, {
          "internal-model-value": o(O),
          "onUpdate:internal-model-value": $e[1] || ($e[1] = (be) => et(O) ? O.value = be : null),
          onClosePicker: c,
          onSelectDate: g,
          onAutoApply: m,
          onTimeUpdate: se,
          onFlowStep: $e[2] || ($e[2] = (be) => te.$emit("flow-step", be)),
          onUpdateMonthYear: $e[3] || ($e[3] = (be) => te.$emit("update-month-year", be)),
          onInvalidSelect: $e[4] || ($e[4] = (be) => te.$emit("invalid-select", o(O)))
        }), Ne({ _: 2 }, [
          ke(o(C), (be, qe) => ({
            name: be,
            fn: ue((Ue) => [
              G(te.$slots, be, Ye(tt({ ...Ue })))
            ])
          }))
        ]), 1040, ["class", "style", "open-on-top", "internal-model-value"])) : w("", !0)
      ], 8, ["to", "disabled"])) : w("", !0)
    ], 2));
  }
}), $n = /* @__PURE__ */ (() => {
  const e = Zl;
  return e.install = (a) => {
    a.component("Vue3DatePicker", e);
  }, e;
})(), ql = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: $n
}, Symbol.toStringTag, { value: "Module" }));
Object.entries(ql).forEach(([e, a]) => {
  e !== "default" && ($n[e] = a);
});
export {
  $n as default
};
